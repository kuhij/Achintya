[{"/Users/mohit/Downloads/achintya/src/text/groups.js":"1","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/index.js":"2","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/App.js":"3","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/reportWebVitals.js":"4","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Login.js":"5","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/constants.js":"6","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Store/reducers/globalStateReducer.js":"7","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Store/reducers/globalUserDataReducer.js":"8","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/homepage.js":"9","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Store/actions.js":"10","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Hooks/useActionDispatcher.js":"11","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Loading.js":"12","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/text/Creation.js":"13","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/text/groups.js":"14","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/donation.js":"15","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/text/RecordRTC.js":"16","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/webRTC/videoRoom.js":"17"},{"size":20038,"mtime":1612103410377,"results":"18","hashOfConfig":"19"},{"size":455,"mtime":1612006334905,"results":"20","hashOfConfig":"21"},{"size":2129,"mtime":1612356904802,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1611219670379,"results":"23","hashOfConfig":"21"},{"size":6886,"mtime":1612356741253,"results":"24","hashOfConfig":"21"},{"size":348,"mtime":1610281502736,"results":"25","hashOfConfig":"21"},{"size":736,"mtime":1608351920000,"results":"26","hashOfConfig":"21"},{"size":765,"mtime":1611977373059,"results":"27","hashOfConfig":"21"},{"size":32837,"mtime":1612381830412,"results":"28","hashOfConfig":"21"},{"size":98,"mtime":1604389232000,"results":"29","hashOfConfig":"21"},{"size":636,"mtime":1604389232000,"results":"30","hashOfConfig":"21"},{"size":671,"mtime":1610972079000,"results":"31","hashOfConfig":"21"},{"size":1763,"mtime":1612354664808,"results":"32","hashOfConfig":"21"},{"size":13132,"mtime":1612382226602,"results":"33","hashOfConfig":"21"},{"size":3825,"mtime":1612258555073,"results":"34","hashOfConfig":"21"},{"size":3541,"mtime":1612258555076,"results":"35","hashOfConfig":"21"},{"size":16817,"mtime":1612258555078,"results":"36","hashOfConfig":"21"},{"filePath":"37","messages":"38","errorCount":1,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"1ipjpcc",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1crov3q",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},"/Users/mohit/Downloads/achintya/src/text/groups.js",["77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101"],"import { db, storageRef, database, messaging } from \"../App\";\nimport firebase from \"firebase\";\n\nimport React, { useEffect, useState, useRef, Component } from \"react\";\nimport { Dimensions, Text, TextInput, View, ScrollView } from \"react-native\";\nimport { useSwipeable, Swipeable, LEFT, RIGHT, UP, DOWN } from \"react-swipeable\";\n\nimport {\n  Snackbar,\n} from \"@material-ui/core\";\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport { Button } from \"@material-ui/core\";\n\nimport RecordPage from './RecordRTC';\nimport VideoRoom from '../webRTC/videoRoom'\n\nimport { useSelector } from \"react-redux\";\nimport swal from \"sweetalert\";\n\nimport CryptoJS from 'crypto-js'\n\nimport { Crypt, RSA } from 'hybrid-crypto-js';\n\nimport useActionDispatcher from \"../Hooks/useActionDispatcher\";\nimport { useHistory } from \"react-router-dom\";\nimport Donation from \"../donation\";\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst initialState = {\n  value: \"\",\n  amount: null\n};\n\nlet obj = { data: {} }\n\n\nexport default function TextBroadCast(props) {\n  const history = useHistory();\n\n  const [state, setState] = useState(initialState);\n  const [count, setCount] = useState(0);\n  const [guest, setGuest] = useState(false);\n  const [status, setStatus] = useState(\"\");\n  const [showRecording, setShowRecording] = useState(false)\n  const [showVideo, setShowVideo] = useState(false)\n  const [videoURL, setVideoURL] = useState(\"\")\n  const [isprivate, setPrivate] = useState(false)\n\n  const [balance, setBalance] = useState(null)\n  const [video, setVideo] = useState(false)\n  const [firestore, setFirestore] = useState(null)\n\n  const [turn, setTurn] = useState(\"\")\n  const [requester, setRequester] = useState(\"\")\n  const [accceptance, setAcceptance] = useState(false)\n  const [main, setMain] = useState(true)\n\n  const [replayText, setReplayText] = useState(null)\n  const [message, setMessage] = useState(\"\")\n  const [messgOwner, setOwner] = useState(\"\")\n  const [singleLetter, setSingle] = useState(\"\")\n\n  const textInputRef = useRef();\n  const recordedMessage = useRef();\n\n  const dispatchAction = useActionDispatcher();\n  const user_data = useSelector((state) => state.globalUserData);\n  const [word, setWord] = useState(\"\")\n\n  const handleChange = (e) => {\n    setState((s) => ({\n      ...s,\n      amount: e,\n    }));\n  }\n\n  useEffect(() => {\n    messaging.onMessage((payload) => {\n      const obj = JSON.parse(payload.data.status)\n      const update = obj.data\n      setReplayText(update)\n      setOwner(obj.name)\n      console.log(\"on message works!\", payload, payload.data, update);\n    });\n  }, [])\n\n  useEffect(() => {\n    if (replayText !== null) {\n      replay()\n    }\n\n  }, [replayText])\n\n  const replay = () => {\n    const keyArr = Object.keys(replayText)\n    const valArr = Object.values(replayText)\n    let fullTimeline = \"\";\n    let count = 0\n\n    let counter = parseInt(keyArr[count]) - parseInt(keyArr[count])\n    var myFunction = async function () {\n      console.log(counter, valArr[count]);\n      fullTimeline = fullTimeline += valArr[count]\n      setMessage(fullTimeline)\n\n      count = await count + 1\n      counter = parseInt(keyArr[count]) - parseInt(keyArr[count - 1])\n      const timer = setTimeout(myFunction, counter);\n\n      if (keyArr[count] === undefined || keyArr[count] === null) {\n        clearTimeout(timer)\n        setTimeout(() => {\n          setMessage(\"\")\n        }, 5000);\n        //alert('Replay stream finished')\n      }\n\n    }\n    setTimeout(myFunction, counter)\n  }\n\n  const writerFunction = (status) => {\n\n    /*----------------- Read host status from rtdb-------------------*/\n    status.on(\"value\", function (snapshot) {\n      //console.log(snapshot.val());\n      if (snapshot.val().status === \"waiting\") {\n        setState((s) => ({\n          ...s,\n          value: \"\",\n        }));\n      }\n      if (snapshot.val().turn === props.spaceId && !user_data.is_creator) {\n        setAcceptance(true)\n      }\n      setStatus(snapshot.val().status);\n      setTurn(snapshot.val().turn)\n      setRequester(snapshot.val().call_request)\n\n      //console.log(snapshot.val().status, snapshot.val().turn);\n    });\n\n  };\n\n  //fetching current data from rtdb -- text/video\n  const keyPressFunction = async (ref) => {\n    let url;\n    let totalCost = 0\n    ref.on(\"value\", function (snapshot) {\n      if (snapshot.val()) {\n        if (snapshot.val().currentLetter === null) {\n          return null;\n        } else {\n          const current = snapshot.val().currentLetter;\n\n          // db.ref(`/Spaces/${props.spaceId}/count`).on(\"value\", function (snapshot) {\n          //   totalCost = totalCost + parseInt(current.length * parseInt(snapshot.val()))\n\n          //   console.log('cost: ', totalCost, current.length, 'people ', snapshot.val());\n          //   setCost(totalCost)\n          // })\n\n          if (current === \"Backspace\") {\n            setState((e) => ({\n              ...e,\n              value: e.value.slice(0, -1),\n            }));\n          } else if (current === \"Enter\") {\n            setState((e) => ({\n              ...e,\n              value: e.value + \"\\n\",\n            }));\n          } else if (current.substring(0, 8) === \"https://\") {\n            url = current   //if video url is there.\n            setShowVideo(true);\n            setVideoURL(url)\n          } else {\n            setState((e) => ({\n              ...e,\n              value: e.value + current,\n            }));\n          }\n        }\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (singleLetter !== \"\") {\n      //let date = Date.now()\n\n      obj[\"name\"] = turn\n      obj[\"data\"][Date.now()] = singleLetter\n      setFirestore(obj)\n      if (!user_data.is_creator) {\n        setState((e) => ({\n          ...e,\n          value: e.value + singleLetter,\n        }));\n        //singleLetter(\"\")\n      }\n\n      console.log(firestore, state.value);\n    }\n\n  }, [singleLetter])\n\n  const listening = () => {\n    let docRef;\n    if (user_data.is_creator) {\n      docRef = db.ref(`/Spaces/${props.spaceId}/data`);\n    } else {\n      docRef = db.ref(`/Spaces/${user_data.joinedSpace}/data`);\n    }\n    keyPressFunction(docRef);\n  };\n\n  const fetchingWriter = async () => {\n    let writerStatus;\n    if (user_data.is_creator) {\n      writerStatus = db.ref(`/Spaces/${props.spaceId}/`)\n    } else {\n      writerStatus = db.ref(`/Spaces/${user_data.joinedSpace}/`)\n    }\n    writerFunction(writerStatus)\n  }\n\n  const subscription = () => {\n    let id = Math.random().toString(36).slice(2)\n\n    database.collection(\"actions\").doc(id).set({\n      subscription: user_data.joinedSpace,\n      fcmtoken: user_data.token,\n      time: firebase.firestore.FieldValue.serverTimestamp()\n    }).then(() => {\n      localStorage.setItem(\"docId\", id);\n    })\n  }\n\n  const spaceOwnerData = async () => {\n    if (props.spaceId) {    //checking for name presence.\n      const firstName = `${props.spaceId.charAt(0).toUpperCase() + props.spaceId.slice(1)}:  `\n\n      if (user_data.is_creator) { // for owner.\n\n        db.ref(`/Spaces/${props.spaceId}/`).onDisconnect().update({\n          online: false,\n          //balance: firebase.database.ServerValue.increment(-cost)\n        });\n\n        await db.ref(`/Spaces/${props.spaceId}/`).update({\n          call_request: \"\",\n          count: firebase.database.ServerValue.increment(1),\n          turn: props.spaceId,\n          status: 'host',\n          online: true\n        })\n\n        db.ref(`/Spaces/${props.spaceId}/data`).update({\n          currentLetter: \"\",\n        })\n\n        listening();\n\n      } else {\n\n        await db.ref(`/Spaces/${props.spaceId}/`).update({\n          balance: firebase.database.ServerValue.increment(-1),\n        });\n        await db.ref(`/Spaces/${user_data.joinedSpace}/`).update({\n          count: firebase.database.ServerValue.increment(1),\n        })\n\n        db.ref(`/Spaces/${user_data.joinedSpace}/`).onDisconnect().update({\n          count: firebase.database.ServerValue.increment(-1),\n        });\n\n        let snap = localStorage.getItem(\"docId\")\n        if (snap === null) {\n          subscription()\n        } else {\n\n          database.collection(\"actions\").doc(snap).update({\n            subscription: \"none\",\n            fcmtoken: user_data.token,\n          }).then(() => {\n            subscription()\n          })\n        }\n\n\n      }\n\n      await fetchingWriter();\n\n    }\n  };\n\n  const fetchUpdate = () => {\n    spaceOwnerData();\n    console.log(requester);\n  };\n\n  useEffect(() => {\n    console.log(user_data.is_creator, user_data.joinedSpace);\n    fetchUpdate();\n  }, []);\n\n  //sending letter by letter to rtdb.\n  const handleInput = async (event) => {\n    const date = Date.now();\n\n    const current = event.nativeEvent.key;\n\n    let docRef;\n    if (isprivate === false) {\n\n      if (user_data.is_creator) {\n        docRef = db.ref(`/Spaces/${props.spaceId}/data`);\n      } else {\n        docRef = db.ref(`/Spaces/${user_data.joinedSpace}/data`);\n      }\n\n      if (current === \"Enter\") {\n        textInputRef.current.focus();\n      }\n\n      //while deleting the letters, speaker name shouldn't be deleted\n      if (current === \"ArrowRight\" || current === \"ArrowLeft\" || current === \"ArrowUp\" || current === \"ArrowDown\" || current === \"Escape\") {\n        return null;\n      } else if (current === \"Tab\") {\n        setWord(\"     \")\n        //setSingle(current)\n\n      } else if (current === \" \") {\n\n        let wrd = word + \" \"\n        setSingle(wrd)\n       \n\n        console.log(originalText);\n        docRef.update({ currentLetter: wrd, time: date }).then(() => {\n          textInputRef.current.focus();\n        })\n        setWord(\"\")\n      } else {\n        setWord(word + current)\n      }\n    }\n  };\n\n  const sendRequest = () => {\n    let id = Math.random().toString(36).slice(2)\n    db.ref(`/Spaces/${user_data.joinedSpace}/`).update({ call_request: props.spaceId, status: \"waiting\" }).then(() => {\n      alert(\"request send! wait for acceptance...\")\n    })\n  }\n\n  const getTurn = async () => {\n\n    if (user_data.is_creator) {\n      db.ref(`/Spaces/${props.spaceId}/`).update({ status: \"host\", turn: props.spaceId });\n      db.ref(`/Spaces/${props.spaceId}/webRTC/message/`).update({\n        callRequest: 'none'\n      })\n      setState((s) => ({\n        ...s,\n        value: \"\",\n      }));\n    } else {\n      sendRequest()\n    }\n\n    textInputRef.current.focus();\n\n  };\n\n  const leaveTurn = () => {\n\n    if (user_data.is_creator) {\n      db.ref(`/Spaces/${props.spaceId}/`).update({ status: \"\" });\n      database.collection(\"Creations\").add({\n        message: JSON.stringify(firestore)\n      }).then(() => {\n        setFirestore(null)\n        //obj = {}\n      })\n    } else {\n      setAcceptance(false)\n      db.ref(`/Spaces/${user_data.joinedSpace}/`).update({ status: \"host\", turn: user_data.joinedSpace });\n      db.ref(`/Spaces/${user_data.joinedSpace}/webRTC/message/`).update({\n        callRequest: 'none'\n      })\n      setState((s) => ({\n        ...s,\n        value: \"\",\n      }));\n      database.collection(\"Creations\").add({\n        message: JSON.stringify(firestore)\n      }).then(() => {\n        setFirestore(null)\n        //obj = {}\n      })\n    }\n\n    textInputRef.current.focus();\n  };\n\n  const acceptRequest = () => {\n    db.ref(`/Spaces/${props.spaceId}/`).update({ status: \"guest\", turn: requester, call_request: \"\" });\n  }\n\n  const rejectRequest = () => {\n    db.ref(`/Spaces/${props.spaceId}/`).update({ call_request: \"\" });\n  }\n\n  // // Register event lister for \"ENTER\" key press to take turn for write\n  // useEffect(() => {\n  //   console.log('called');\n  //   let wrd = word + \" \"\n  //   const listener = (event) => {\n  //     //Escape\n  //     if (event.keyCode === 32) {\n  //       db.ref(`/Spaces/${props.spaceId}/data`).update({\n  //         currentLetter: wrd\n  //       }).then(() => {\n  //         setSingle(wrd)\n  //         setWord(\"\")\n  //       })\n  //     }\n  //   };\n\n  //   // register listener\n  //   document.addEventListener(\"keydown\", listener);\n\n  //   // clean up function, un register listener on component unmount\n  //   return () => {\n  //     document.removeEventListener(\"keydown\", listener);\n  //   };\n  // }, []);\n\n  const sendMessage = () => {\n\n    firebase.firestore().collection(\"Spaces\").doc(props.spaceId).collection(\"creations\").doc('something').collection(\"Text\").add({\n      message: JSON.stringify({ name: props.spaceId, data: { [Date.now()]: state.value } })\n    }).then(() => {\n      setState({\n        value: \"\"\n      })\n    })\n  }\n\n  const onSwiping = async ({ dir }) => {\n    if (dir === UP) {\n      console.log('up');\n      setVideo(true)\n    }\n    if (dir === RIGHT) {\n      console.log('right');\n      if (video === true) {\n        setMain(true)\n      } else {\n        setShowRecording(false)\n      }\n\n      // if (!user_data.is_creator) {\n      //   setDonate(true)\n      // }\n\n    }\n    if (dir === LEFT) {\n      if (guest) {\n        setShowRecording(true)\n      } else if (video === true) {\n        setMain(false)\n      } else {\n        alert('sorry, you can \\'t send video message')\n      }\n    } if (dir === DOWN) {\n      setVideo(false)\n      //setDonate(true)\n    }\n  }\n\n  const autoFocus = () => {\n    textInputRef.current.focus();\n  }\n\n  useEffect(() => {\n    console.log(isprivate);\n    setState({\n      value: \"\"\n    })\n    // db.ref(`/Spaces/${props.spaceId}/`).update({\n    //   available: isprivate === true ? \"public\" : \"private\"\n    // })\n  }, [isprivate])\n\n\n  return (\n    <Swipeable onSwiped={(eventData) => onSwiping(eventData)} preventDefaultTouchmoveEvent={true} trackMouse={true} >\n      <View>\n        {showRecording === true && user_data.revert === false ?\n          <RecordPage spaceId={props.spaceId} /> :\n          video === true ?\n            <View>\n              {(!user_data.is_creator && status === \"guest\" && accceptance === true) ?\n                <VideoRoom username={user_data.joinedSpace} selfName={props.spaceId} creator={false} main={main} />\n                : user_data.is_creator ?\n                  <VideoRoom username={props.spaceId} creator={true} main={main} /> : null}\n            </View>\n            :\n            <View\n              style={{\n                shadowOpacity: 4,\n                width: width,\n                overflowY: \"auto\",\n                height: height * 0.85,\n                marginTop: showVideo === false ? '18px' : null,\n                zIndex: 99999,\n                overscrollBehaviorY: \"contain\",\n                scrollSnapType: \"y proximity\",\n              }}\n              onClick={autoFocus}\n            >\n              {balance <= 0 ? null :\n                (<Text style={{ marginLeft: width - ((10 / 100) * width), position: 'absolute' }}>Balance: {balance}</Text>)}\n              <View>\n                <View style={{ textAlign: 'center', fontWeight: 600, paddingBottom: 5, fontFamily: 'cursive' }}>{turn}</View>\n                {!user_data.is_creator ?\n                  <Donation receiver={user_data.joinedSpace} />\n                  : <button style={{ border: 'none', fontSize: 16, fontFamily: 'auto', position: 'absolute', width: '10%', background: 'none' }} onClick={() => setPrivate(!isprivate)}>{isprivate === true ? \"Public\" : \"Private\"}</button>}\n                <View style={{ height: 1, background: 'black', marginBottom: 12 }}></View>\n                <Text\n                  style={{\n                    marginLeft: showVideo === false ? '10px' : null,\n                    fontSize: 15.5,\n                    paddingRight: showVideo === false ? '18px' : null,\n                    overscrollBehaviorY: \"contain\",\n                    scrollSnapType: \"y proximity\",\n                    scrollSnapAlign: \"end\",\n                  }}\n                >\n                  {showVideo === true ?\n                    <View style={{ height: '100%', width: showVideo === true ? '100%' : null }}>\n                      <img src=\"./right-arrow.png\" style={{ height: 40, width: 40, marginTop: 30, marginLeft: width / 0.5, position: 'absolute', cursor: 'pointer', zIndex: 100 }} alt=\"skip\" onClick={() => setShowVideo(false)} />\n                      <video style={{ width: width, height: height, overflow: 'hidden' }} src={videoURL} ref={recordedMessage} onEnded={() => setShowVideo(false)} autoPlay playsInline></video>\n                    </View>\n                    :\n                    <View>\n                      {!user_data.is_creator ?\n                        <>\n                          {state.value === \"\" ?\n                            (<Text>{message}</Text>)\n                            :\n                            (<Text>{state.value}</Text>)\n                          }\n                        </>\n                        :\n                        <View style={{ display: 'flex', flexFlow: 'row' }}><span style={{ letterSpacing: 1 }}>{state.value}</span><span style={{ letterSpacing: 1 }}>{word}</span></View>\n                      }\n                    </View>\n\n                  }\n\n                  <TextInput\n                    name=\"usertext\"\n                    multiline={true}\n                    numberOfLines={1}\n                    style={{\n                      outline: \"none\",\n                      border: \"none\",\n                      color: \"#888888\",\n                    }}\n                    id=\"standard-multiline-flexible\"\n                    style={{ outline: \"none\", width: 2, position: 'absolute' }}\n                    value=\"\"\n                    onKeyPress={handleInput}\n                    autoFocus={true}\n                    editable={user_data.is_creator ? status === \"host\" : (status === \"guest\" && accceptance === true || turn === props.spaceId)}\n                    ref={textInputRef}\n                  />\n                </Text>\n              </View>\n              <ScrollView\n                style={{\n                  position: \"fixed\",\n                  top: user_data.is_creator ? height / 1.1 : (height / 1.1),\n                  //right: width <= 400 ? 0 : width / 4.4,\n                  width: \"100%\",\n                  zIndex: 99999,\n                }}\n              >\n                {!user_data.is_creator && status === \"\" && requester === \"\" ? (\n                  <button onClick={getTurn}>Take turn</button>\n                ) : (user_data.is_creator && status !== \"host\") || status === \"\" ? (\n                  <button onClick={getTurn}>Take turn</button>\n                ) : null}\n\n                {(!user_data.is_creator && status === \"guest\" && accceptance === true) ||\n                  (user_data.is_creator && status == \"host\" && isprivate === false) ? (\n                    <button onClick={leaveTurn}>Leave turn</button>\n                  ) :\n                  // <CButton\n                  //   onClick={sendMessage}\n                  //   title=\"Send\"\n                  // />\n                  null\n                }\n              </ScrollView>\n\n              <View>\n                {requester !== \"\" && user_data.is_creator ?\n                  <Snackbar\n                    open={requester !== \"\" && user_data.is_creator}\n                    style={{ position: 'fixed', top: '580px', width: '100%' }}\n                  >\n                    <Alert\n                      severity=\"info\"\n                      style={{ backgroundColor: \"#fff\", color: \"#000\" }}\n                    >\n                      {requester} sent you a stream request.{\" \"}\n                      <Button\n                        style={{ color: \"#1eb2a6\", fontWeight: \"bold\" }}\n                        size=\"small\"\n                        onClick={acceptRequest}\n                      >\n                        Accept\n            </Button>\n                      <Button\n                        style={{ color: \"#fe346e\", fontWeight: \"bold\" }}\n                        size=\"small\"\n                        onClick={rejectRequest}\n                      >\n                        Decline\n            </Button>\n                    </Alert>\n                  </Snackbar>\n                  : null}\n              </View>\n            </View>\n\n        }\n      </View>\n    </Swipeable>\n  )\n}\n","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/index.js",[],["102","103"],"/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/App.js",[],"/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/reportWebVitals.js",[],"/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Login.js",["104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127"],"/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/constants.js",[],"/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Store/reducers/globalStateReducer.js",[],"/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Store/reducers/globalUserDataReducer.js",[],"/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/homepage.js",["128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143"],"/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Store/actions.js",[],"/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Hooks/useActionDispatcher.js",[],"/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Loading.js",[],"/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/text/Creation.js",["144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162"],"import * as firebase from \"firebase\";\nimport Groups from \"./groups\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Dimensions, Text, TextInput, View } from \"react-native\";\nimport {\n  useSwipeable,\n  Swipeable,\n  LEFT,\n  RIGHT,\n  UP,\n  DOWN,\n} from \"react-swipeable\";\nimport { useSelector } from \"react-redux\";\n//import SpacesList from \"../spaces\";\nimport useActionDispatcher from \"../Hooks/useActionDispatcher\";\nimport { SET_KEYS_TRUE, UPDATE_USER_DATA } from \"../Store/actions\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport { messaging, database, db } from '../App'\n//import PrivateSession from './privateSession'\n\nexport default function Creation(props) {\n  const { username } = useParams();\n  const dispatchAction = useActionDispatcher();\n\n  const user_data = useSelector((state) => state.globalUserData);\n\n  const [count, setCount] = useState(0);\n\n  const [open, setOpen] = useState(false)\n  const [privateCall, setPrivate] = useState(false)\n\n  const onSwiping = ({ dir }) => {\n    if (dir === DOWN) {\n      setCount(count - 1)\n    }\n    if (dir === UP) {\n      setCount(count + 1)\n      setOpen(true)\n      setPrivate(true)\n    }\n  };\n\n  return (\n    <Swipeable\n      onSwiped={(eventData) => onSwiping(eventData)}\n      preventDefaultTouchmoveEvent={true}\n      trackMouse={true}\n      style={{ height: \"100%\", width: '100%' }}\n    >\n\n      <View\n        style={{\n          shadowOpacity: 4,\n          width: \"100%\",\n          marginRight: \"4px\",\n          overflow: 'hidden',\n          height: \"100%\",\n        }}\n      >\n            <Groups\n              spaceId={username}\n              creator={user_data.is_creator}\n            />\n         \n      </View>\n    </Swipeable>\n  );\n}\n","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/text/groups.js",["163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206"],"/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/donation.js",["207","208","209","210","211","212","213"],"import { db, database } from \"./App\";\nimport firebase from \"firebase\";\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Dimensions, Text, TextInput, View } from \"react-native\";\n\nimport swal from \"sweetalert\";\n\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport { useParams } from \"react-router-dom\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport default function Donation(props) {\n    const { username } = useParams();\n\n    const donation = () => {\n        swal({\n            text: 'Enter Donation Amount',\n            content: \"input\",\n            button: {\n                text: \"Proceed\",\n                closeModal: false,\n            },\n        }).then((value) => {\n            if (parseInt(value) < 100) {\n                alert(\"Amount should be equal or more than 100\")\n            } else {\n                openCheckout(parseInt(value) * 100)\n            }\n        })\n    }\n\n    const sendingMoney = (razorpay_payment_id) => {\n        console.log(\"payment successful\", razorpay_payment_id);\n    };\n\n    const openCheckout = async (amount) => {\n        let options = {\n            \"key\": \"rzp_live_1hWjIFVX8QIpW8\",\n            \"amount\": amount,\n            \"name\": \"Donation\",\n            \"currency\": 'INR',\n            \"description\": `${props.receiver}`,\n            \"image\": \"./favicon.png\",\n            \"handler\": async function (response) {\n                console.log(response)\n                if (response.razorpay_payment_id) {\n                    sendingMoney(response.razorpay_payment_id);\n\n                    await database.collection(\"transactions\").doc(response.razorpay_payment_id).set({\n                        paymentId: response.razorpay_payment_id,\n                        claimedAmount: amount\n                    }).then(() => {\n                        database.collection(\"transactions\").doc(response.razorpay_payment_id).onSnapshot(async function (doc) {\n                            if (doc.data()) {\n                                if (doc.data().paidAmount === amount && doc.data().status === 1) {\n                                    await db.ref(`/Users/${props.receiver}/wallet/`).update({\n                                        balance: firebase.database.ServerValue.increment(amount)\n                                    }).then(() => {\n                                        swal({\n                                            title: \"Donation Successful\",\n                                            text:\n                                                \"Congatulations! Your donation is successful for INR \" + amount,\n                                            icon: \"success\",\n                                            button: \"Proceed\",\n                                            buttonColor: \"#000\",\n                                        })\n                                    })\n                                } else {\n                                    console.log('payment failed');\n                                }\n                            }\n                        })\n                    })\n                }\n            },\n            \"prefill\": {\n                name: \"\",\n                email: \"\",\n            },\n            \"notes\": {\n                address: \"Hello World\",\n            },\n            \"theme\": {\n                color: \"#000000\",\n            },\n        };\n\n        let rzp = new window.Razorpay(options);\n        rzp.open();\n    };\n\n    return (\n        <View style={{ position: \"absolute\", bottom: 25 }}>\n            <Tooltip title=\"Donate\" placement=\"right\">\n                <IconButton color=\"inherit\" onClick={donation}>\n                    <AttachMoneyIcon />\n                </IconButton>\n            </Tooltip>\n        </View>\n    )\n}","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/text/RecordRTC.js",["214","215","216","217","218","219","220","221","222"],"import React, { useEffect, useState, useRef, Component } from \"react\";\nimport RecordRTC from \"recordrtc\";\nimport { storageRef } from \"../App\";\nimport firebase from \"firebase\";\nimport {\n  Dimensions,\n  Text,\n  View,\n} from \"react-native\";\n\nimport { useSelector } from \"react-redux\";\n\nimport { SET_KEYS_TRUE, UPDATE_USER_DATA } from \"../Store/actions\";\nimport useActionDispatcher from \"../Hooks/useActionDispatcher\";\nconst { width, height } = Dimensions.get(\"window\");\n\nexport default function RecordPage(props) {\n  const [videoSrc, setVideoSrc] = useState(\"\")\n  const [recordVideo, setRecordVideo] = useState(null)\n\n  const [live, setLive] = useState(\"\")\n\n  const video = useRef()\n  const live2 = useRef()\n\n  const dispatchAction = useActionDispatcher();\n  const user_data = useSelector((state) => state.globalUserData);\n\n  useEffect(() => {\n    recordRTC()\n  }, [])\n\n  //Recording WebRTC\n  const recordRTC = () => {\n    navigator.mediaDevices\n      .getUserMedia({\n        video: true,\n        audio: true,\n        minWidth: 1280,\n        minHeight: 720,\n        maxWidth: 1920,\n        maxHeight: 1080,\n        minAspectRatio: 1.77,\n      })\n      .then(async function (stream) {\n        setLive(stream)\n        video.current.srcObject = stream\n        //self.live2.current.srcObject = stream\n        let recorder = new RecordRTC(stream, {\n          mimeType: \"video/webm;codecs=vp8\",\n          canvas: {\n            width: 1920,\n            height: 1080,\n            minFrameRate: 3,\n            maxFrameRate: 32,\n          },\n        });\n        setRecordVideo(recorder)\n        const rec = recorder.startRecording();\n        console.log(recorder);\n      });\n  };\n\n  const sendMessage = () => {\n    let blobList = [];\n    const date = Date.now()\n    live.getTracks()[0].stop()\n    live.getTracks()[1].stop()\n    recordVideo.stopRecording(function () {\n      let blob = recordVideo.getBlob();\n      console.log(blob);\n      storageRef.child('/AVO/messages/' + date).put(blob).then(function (snapshot) {\n        console.log('recording uploaded ');\n        const callerUrl = storageRef.child(\"/AVO/messages/\" + date).getDownloadURL().then(async function (url) {\n          var xhr = new XMLHttpRequest();\n          xhr.responseType = 'blob';\n          xhr.open(\"GET\", url,);\n          xhr.onload = async function (e) {\n            var blob = xhr.response;\n            blobList.push(blob)\n            var blobURL = new Blob(blobList, { 'type': \"video/webm;codecs=h264\" });\n            var vid = window.URL.createObjectURL(blobURL);\n            setVideoSrc(url)\n\n            firebase.database().ref(`/Users/${props.spaceId}/data`).update({\n              currentLetter: url\n            }).then(() => {\n              alert('uploaded')\n              dispatchAction(UPDATE_USER_DATA, {\n                data: {\n                  revert: true,\n                },\n              });\n            })\n          };\n\n          xhr.send();\n          console.log(url);\n        })\n      })\n    });\n  }\n\n  return (\n    <View style={{ height: height, width: width }}>\n      <video style={{ width: '100vw', height: height, margin: 0 }} src={live} ref={video} autoPlay playsInline></video>\n      <View style={{ position: 'absolute', marginTop: height / 1.2, display: 'block', marginLeft: (width / 2) - 45, width: '100%' }}>\n        <img src=\"./send-button.png\" alt=\"send\" style={{ height: 45, width: 45, cursor: 'pointer', padding: 15, background: 'white', borderRadius: '50%' }} className=\"video-overlay\" onClick={sendMessage} />\n      </View>\n    </View>\n  )\n\n}\n","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/webRTC/videoRoom.js",["223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249"],"import React, { Component, useState, useEffect } from \"react\";\nimport { Dimensions, Image, StyleSheet, Text, View, TextInput, TouchableHighlight, Alert } from \"react-native\";\nimport firebase from 'firebase';\nimport { useSwipeable, Swipeable, LEFT, RIGHT, UP, DOWN } from \"react-swipeable\";\nimport RecordRTC from 'recordrtc';\nconst { width, height } = Dimensions.get(\"window\");\n\n\nvar pc = null;\n\n//webrtc\nvar servers = { 'iceServers': [{ 'urls': 'stun:stun.services.mozilla.com' }, { 'urls': 'stun:stun.l.google.com:19302' }, { 'urls': 'turn:numb.viagenie.ca', 'credential': 'PrivatePassword', 'username': 'anothermohit@gmail.com' }] };\nconst yourId = Math.floor(Math.random() * 1000000000);\nconst senders = [];\n\nclass VideoRoom extends Component {\n    constructor(props) {\n        super(props);\n\n        this.yourVideo = React.createRef();\n        this.friendsVideo = React.createRef();\n        this.textRTC = React.createRef();\n        console.log('constructor')\n\n\n        this.state = {\n            isLawyer: false,\n            myVideo: true,\n            callFriend: false,\n            callUserValue: '',\n            callUser: '',\n            callRequest: false,\n            callStatus: false,\n            recordVideo: null,\n            completion: false,\n            username: this.props.username,\n            docRef2: null,\n            closeCircle: false,\n            callRequest: \"\",\n            creatorMessage: {},\n        };\n    }\n    async componentDidMount() {\n        const self = this\n\n        navigator.mediaDevices.getUserMedia({ audio: true, video: true })\n            .then((stream) => {\n                console.log(stream)\n                console.log('step 1/2')\n                self.setState({ videoStream: stream, username: self.props.username })\n                self.yourVideo.current.srcObject = stream\n            }).then(() => {\n                if (!self.props.creator) {\n                    self.findCreator()\n                }\n                else {\n                    self.setCreator()\n                }\n            })\n        console.log(this.friendsVideo, this.yourVideo);\n\n        firebase.database().ref(`/Users/${self.props.username}/webRTC/message/callRequest`).on(\"value\", async function (snapshot) {\n            console.log(snapshot.val());\n            if (snapshot.val()) {\n                if (snapshot.val() === 'none' && self.props.creator) {\n                    self.state.recordVideo.stopRecording(function () {\n                        let blob = self.state.recordVideo.getBlob();\n                        firebase.storage().ref().child(`/liveSession/${self.props.username}/${self.props.username}`).put(blob).then(function (snapshot) {\n                            console.log('recording uploaded');\n                            self.setCreator()\n                        })\n                    })\n\n\n                } else if (!self.props.creator && snapshot.val().callRequest === 'none') {\n                    self.closeStream()\n                }\n            } else {\n                return null\n            }\n        })\n    }\n    handleChatMessage = (event, arrayToStoreChunks) => {\n\n        console.log(event)\n        var data = JSON.parse(event.data);\n        console.log(data)\n        this.setState({ creatorMessage: data })\n    };\n    // To send messages on chat\n    sendInputMessage = () => {\n        var data = {};\n        data.type = \"text\";\n        data.message = this.state.broadcastMessage;\n        this.state.dataChannel.send(JSON.stringify(data));\n    };\n\n    videoCall = () => {\n        const self = this\n        console.log('video call function called')\n        pc = new RTCPeerConnection(servers);\n        self.setState({ pc: pc })\n        let dataChannel = pc.createDataChannel(\"MyApp Channel\");\n        this.setState({ dataChannel });\n        dataChannel.addEventListener(\"open\", (event) => {\n            //dataChannel.send('hello');\n            self.sendInputMessage()\n            console.log(\"Data Channel is open now!\");\n            //   //beginTransmission(dataChannel);\n        });\n        pc.ondatachannel = (event) => {\n            console.log(\"Listening data channel\");\n            var channelRec = event.channel;\n            var arrayToStoreChunks = [];\n            channelRec.onmessage = function (event) {\n                self.handleChatMessage(event, arrayToStoreChunks);\n            };\n            console.log(channelRec);\n        };\n\n        pc.oniceconnectionstatechange = function (event) {\n            console.log(pc.iceConnectionState)\n            switch (pc.iceConnectionState) {\n\n                case \"connected\":\n\n                    //switch off listener\n\n                    if (!self.props.creator) {\n                        self.setState({ completion: true })\n                        console.log('completion true')\n                    }\n                    if (self.state.docRef2)\n                        self.state.docRef2.off()\n                    console.log('docRef, docRef2 switched off', self.state.docRef2)\n\n                    // The connection has become fully connected\n                    break;\n                case \"disconnected\":\n                case \"failed\":\n                    // One or more transports has terminated unexpectedly or in an error\n                    break;\n                case \"closed\":\n                    // The connection has been closed\n                    break;\n            }\n        }\n\n\n        pc.onicecandidate = (event) => {\n            if (event.candidate) {\n                if (!this.props.creator) {\n                    console.log('send ice candidate to lawyer by client, step 10.');\n                    this.sendMessageToCallICE(yourId, JSON.stringify({ 'ice': event.candidate }));\n\n\n                }\n                else {\n                    console.log('send ice candidate to client by lawyer, step 17.');\n                    this.sendMessageICE(yourId, JSON.stringify({ 'ice': event.candidate }))\n                }\n\n            }\n            else {\n                console.log(\"Sent All Ice\")\n                console.log(pc)\n            }\n        }\n\n\n        pc.onaddstream = (event) => {\n            this.setState({\n                myVideo: false\n            }, () => {\n                self.friendsVideo.current.srcObject = event.stream\n                self.setState({ creatorStream: event.stream })\n            });\n\n            console.log(\"Adding other person's video to my screen. step 19/20.\");\n            console.log(event.stream);\n        };\n\n\n\n        if (!this.props.creator) {\n\n            firebase.database().ref('/Users/' + this.props.username + '/webRTC/message').update({ callRequest: 'visitor' });\n            const stream = this.state.videoStream;\n            const tracks = stream.getTracks();\n\n            tracks.forEach((track) => {\n                senders.push(pc.addTrack(track, stream));\n            });\n\n\n            pc.createOffer()\n                .then((offer) => {\n                    console.log('offer created')\n                    pc.setLocalDescription(offer).then(() => {\n                        self.sendMessageToCall(yourId, JSON.stringify({ 'sdp': pc.localDescription }))\n                    });\n                })\n\n            const docRef = firebase.database().ref('/Users/' + this.props.username + '/webRTC/message')\n            docRef.on('value', (snapshot2) => {\n                if (snapshot2.val().message) {\n                    if (JSON.parse(snapshot2.val().message)) {\n                        const msg = JSON.parse(snapshot2.val().message);\n                        const sender = snapshot2.val().sender;\n                        if (sender != yourId) {\n                            if (msg.sdp.type === \"answer\") {\n\n                                pc.setRemoteDescription(new RTCSessionDescription(msg.sdp)).then(() => {\n                                    docRef.off()\n                                    const docRef2 = firebase.database().ref('/Users/' + this.props.username + '/webRTC/ice/lawyerIce')\n                                    self.setState({\n                                        docRef2\n                                    }, () => {\n                                        console.log('docRef2')\n                                        docRef2.on('child_added', (snapshot) => {\n                                            if (JSON.parse(snapshot.val())) {\n                                                const ice = JSON.parse(snapshot.val());\n                                                pc.addIceCandidate(new RTCIceCandidate(ice.ice)).then(_ => {\n                                                    console.log(\"Added ice candidate to clien's peerconnection which was sent by lawyer, step 18\")\n                                                }).catch(e => {\n                                                    console.log(\"Error: Failure during addIceCandidate()\");\n                                                });\n                                            }\n                                        });\n                                    })\n\n\n                                }).catch(e => {\n                                    console.log(\"Error: Failure while adding answer to remote description\");\n                                });\n                            }\n\n                        }\n                    }\n                }\n            });\n\n        }\n        else {\n\n            console.log('lawyer in videocall function')\n            const stream = this.state.videoStream;\n            const tracks = stream.getTracks();\n\n            tracks.forEach((track) => {\n                console.log(track);\n                senders.push(pc.addTrack(track, stream));\n            });\n            const docRef = firebase.database().ref('/Users/' + this.props.username + '/webRTC/message')\n\n            docRef.on('value', (snapshot) => {\n                if (snapshot.val().message && (pc.connectionState != 'closed')) {\n                    var msg = JSON.parse(snapshot.val().message);\n                    const sender = snapshot.val().sender;\n                    if (sender != yourId) {\n                        if (msg.sdp.type === \"offer\") {\n                            console.log('offer sent by client is recieved by lawyer, step 8.')\n\n                            pc.setRemoteDescription(new RTCSessionDescription(msg.sdp)).then(() => {\n                                docRef.off()\n                                const docRef2 = firebase.database().ref('/Users/' + self.props.username + '/webRTC/ice/clientIce')\n                                self.setState({ docRef2 })\n                                docRef2.on('child_added', (snapshot) => {\n                                    if (JSON.parse(snapshot.val())) {\n                                        const ice = JSON.parse(snapshot.val());\n                                        pc.addIceCandidate(ice.ice).then(() => {\n                                            console.log('ice candidates added at lawyer\"s pc')\n                                        }).catch(e => {\n                                            console.log(\"Error: Failure during addIceCandidate()\", e);\n                                            console.log(ice.ice)\n                                        });\n                                    }\n                                });\n\n                                pc.createAnswer().then((answer) => {\n                                    console.log('answer created',)\n                                    pc.setLocalDescription(answer).then(() => {\n\n                                    }).then(() => {\n                                        self.sendMessage(yourId, JSON.stringify({ 'sdp': pc.localDescription }))\n\n                                        console.log('answer sent to client')\n\n                                    });;\n\n                                })\n                            })\n\n                        }\n\n                    }\n                }\n            })\n        }\n    }\n\n    closeStream = () => {\n        const self = this\n        self.state.recordVideo.stopRecording(function () {\n            let blob = self.state.recordVideo.getBlob();\n            firebase.storage().ref().child(`/liveSession/${self.props.username}/${self.props.username}`).put(blob).then(function (snapshot) {\n                console.log('recording uploaded');\n                self.state.pc.close()\n                self.state.videoStream.getTracks()[0].stop()\n                self.state.videoStream.getTracks()[1].stop()\n            })\n        })\n\n    }\n\n    //webrtc\n    sendMessageToCall(senderId, data) {\n        var msg = firebase.database().ref('/Users/' + this.props.username + '/webRTC/message').update({ sender: senderId, message: data });\n    }\n\n    sendMessageToCallICE(senderId, data) {\n        var msg = firebase.database().ref('/Users/' + this.props.username + '/webRTC/ice/clientIce').update({ [Date.now()]: data });\n    }\n\n    sendMessage(senderId, data) {\n        var msg = firebase.database().ref('/Users/' + this.props.username + '/webRTC/message').update({ sender: senderId, message: data });\n    }\n    sendMessageICE(senderId, data) {\n        var msg = firebase.database().ref('/Users/' + this.props.username + '/webRTC/ice/lawyerIce').update({ [Date.now()]: data });\n    }\n\n\n    handleTextChange = (event) => {\n        this.setState({ broadcastMessage: event.target.value })\n    }\n\n    setCreator = () => {\n        const self = this\n        this.setState({ isLawyer: true })\n        console.log('setlawyer fuction called')\n        firebase.database().ref('/Users/' + this.state.username + '/webRTC').update({ currentOnline: true })\n        firebase.database().ref('/Users/' + this.state.username + '/webRTC' + '/message').update({ startTime: null, callRequest: null, callStatus: false, message: null, sender: this.state.username, });\n        firebase.database().ref('/Users/' + this.state.username + '/webRTC' + '/ice').update({ clientIce: null, lawyerIce: null });\n        const docRef = firebase.database().ref('/Users/' + this.state.username + '/webRTC')\n        docRef.on('value', async (snapshot) => {\n            if (snapshot.val().message.callRequest) {\n                self.setState({ callRequest: snapshot.val().message.callRequest })\n                await self.videoCall()\n                const recordVideo = await RecordRTC(self.state.videoStream, {\n                    mimeType: 'video/webm\\;codecs=vp8',\n                    canvas: {\n                        width: 1920,\n                        height: 1080,\n                        minFrameRate: 3,\n                        maxFrameRate: 32\n                    }\n                });\n                const rec = recordVideo.startRecording();\n                console.log(rec);\n                self.setState({ recordVideo: recordVideo });\n                docRef.off()\n            }\n        })\n\n    }\n\n\n\n    findCreator = () => {\n        const self = this\n        console.log('find creator called')\n        this.setState({ isLawyer: false })\n        this.videoCall(this.props.username)\n\n        const recordVideo = RecordRTC(self.state.videoStream, {\n            mimeType: 'video/webm\\;codecs=vp8',\n            canvas: {\n                width: 1920,\n                height: 1080,\n                minFrameRate: 3,\n                maxFrameRate: 32\n            }\n        });\n        const rec = recordVideo.startRecording();\n        console.log(rec);\n        self.setState({ recordVideo: recordVideo });\n    }\n\n    closeCircle = () => {\n        this.setState({ closeCircle: true });\n    };\n    fullScreen = () => {\n        if (this.props.creator) {\n            this.yourVideo.current.requestFullscreen()\n            this.yourVideo.current.style.transform = 'rotateY(180deg)'\n        }\n        else {\n            this.friendsVideo.current.requestFullscreen()\n        }\n    };\n\n    render() {\n\n        return (\n            <View style={{\n                height: \"100%\",\n                width: \"100%\",\n                minHeight: \"100%\",\n                minWidth: \"100%\",\n                position: \"relative\",\n            }}\n            >\n                <View>\n                    <video style={{\n                        transform: \"rotateY(180deg)\",\n                        width: width,\n                        height: height / 2,\n                        background: \"black\",\n\n                    }} loop ref={this.yourVideo} autoPlay muted playsInline></video>\n                    <video style={{\n                        transform: \"rotateY(180deg)\",\n                        width: width,\n                        height: height,\n                        background: \"black\",\n\n                    }} loop ref={this.friendsVideo} autoPlay playsInline></video>\n                </View>\n\n            </View>\n        );\n\n\n    }\n}\n\nexport default VideoRoom",{"ruleId":"250","severity":1,"message":"251","line":1,"column":14,"nodeType":"252","messageId":"253","endLine":1,"endColumn":24},{"ruleId":"250","severity":1,"message":"254","line":4,"column":46,"nodeType":"252","messageId":"253","endLine":4,"endColumn":55},{"ruleId":"250","severity":1,"message":"255","line":6,"column":10,"nodeType":"252","messageId":"253","endLine":6,"endColumn":22},{"ruleId":"250","severity":1,"message":"256","line":20,"column":8,"nodeType":"252","messageId":"253","endLine":20,"endColumn":12},{"ruleId":"250","severity":1,"message":"257","line":22,"column":8,"nodeType":"252","messageId":"253","endLine":22,"endColumn":16},{"ruleId":"250","severity":1,"message":"258","line":40,"column":9,"nodeType":"252","messageId":"253","endLine":40,"endColumn":16},{"ruleId":"250","severity":1,"message":"259","line":43,"column":10,"nodeType":"252","messageId":"253","endLine":43,"endColumn":15},{"ruleId":"250","severity":1,"message":"260","line":43,"column":17,"nodeType":"252","messageId":"253","endLine":43,"endColumn":25},{"ruleId":"250","severity":1,"message":"261","line":44,"column":17,"nodeType":"252","messageId":"253","endLine":44,"endColumn":25},{"ruleId":"250","severity":1,"message":"262","line":51,"column":19,"nodeType":"252","messageId":"253","endLine":51,"endColumn":29},{"ruleId":"250","severity":1,"message":"263","line":62,"column":10,"nodeType":"252","messageId":"253","endLine":62,"endColumn":20},{"ruleId":"250","severity":1,"message":"264","line":68,"column":9,"nodeType":"252","messageId":"253","endLine":68,"endColumn":23},{"ruleId":"250","severity":1,"message":"265","line":72,"column":9,"nodeType":"252","messageId":"253","endLine":72,"endColumn":21},{"ruleId":"266","severity":1,"message":"267","line":94,"column":6,"nodeType":"268","endLine":94,"endColumn":18,"suggestions":"269"},{"ruleId":"250","severity":1,"message":"270","line":150,"column":9,"nodeType":"252","messageId":"253","endLine":150,"endColumn":18},{"ruleId":"266","severity":1,"message":"271","line":208,"column":6,"nodeType":"268","endLine":208,"endColumn":20,"suggestions":"272"},{"ruleId":"250","severity":1,"message":"273","line":244,"column":13,"nodeType":"252","messageId":"253","endLine":244,"endColumn":22},{"ruleId":"266","severity":1,"message":"274","line":309,"column":6,"nodeType":"268","endLine":309,"endColumn":8,"suggestions":"275"},{"ruleId":"276","severity":2,"message":"277","line":343,"column":21,"nodeType":"252","messageId":"278","endLine":343,"endColumn":33},{"ruleId":"250","severity":1,"message":"279","line":355,"column":9,"nodeType":"252","messageId":"253","endLine":355,"endColumn":11},{"ruleId":"250","severity":1,"message":"280","line":444,"column":9,"nodeType":"252","messageId":"253","endLine":444,"endColumn":20},{"ruleId":"281","severity":1,"message":"282","line":578,"column":21,"nodeType":"283","endLine":578,"endColumn":80},{"ruleId":"284","severity":1,"message":"285","line":582,"column":94,"nodeType":"286","messageId":"287","endLine":582,"endColumn":96},{"ruleId":"284","severity":1,"message":"285","line":582,"column":118,"nodeType":"286","messageId":"287","endLine":582,"endColumn":120},{"ruleId":"288","severity":1,"message":"289","line":603,"column":51,"nodeType":"290","messageId":"291","endLine":603,"endColumn":53},{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","replacedBy":"295"},{"ruleId":"250","severity":1,"message":"296","line":1,"column":17,"nodeType":"252","messageId":"253","endLine":1,"endColumn":26},{"ruleId":"250","severity":1,"message":"297","line":1,"column":38,"nodeType":"252","messageId":"253","endLine":1,"endColumn":44},{"ruleId":"250","severity":1,"message":"254","line":1,"column":46,"nodeType":"252","messageId":"253","endLine":1,"endColumn":55},{"ruleId":"250","severity":1,"message":"255","line":4,"column":10,"nodeType":"252","messageId":"253","endLine":4,"endColumn":22},{"ruleId":"250","severity":1,"message":"298","line":4,"column":35,"nodeType":"252","messageId":"253","endLine":4,"endColumn":39},{"ruleId":"250","severity":1,"message":"299","line":4,"column":41,"nodeType":"252","messageId":"253","endLine":4,"endColumn":46},{"ruleId":"250","severity":1,"message":"300","line":5,"column":21,"nodeType":"252","messageId":"253","endLine":5,"endColumn":31},{"ruleId":"250","severity":1,"message":"301","line":5,"column":33,"nodeType":"252","messageId":"253","endLine":5,"endColumn":39},{"ruleId":"250","severity":1,"message":"302","line":10,"column":14,"nodeType":"252","messageId":"253","endLine":10,"endColumn":22},{"ruleId":"250","severity":1,"message":"303","line":10,"column":24,"nodeType":"252","messageId":"253","endLine":10,"endColumn":33},{"ruleId":"250","severity":1,"message":"304","line":11,"column":8,"nodeType":"252","messageId":"253","endLine":11,"endColumn":21},{"ruleId":"250","severity":1,"message":"305","line":13,"column":10,"nodeType":"252","messageId":"253","endLine":13,"endColumn":23},{"ruleId":"250","severity":1,"message":"306","line":13,"column":25,"nodeType":"252","messageId":"253","endLine":13,"endColumn":41},{"ruleId":"250","severity":1,"message":"264","line":23,"column":11,"nodeType":"252","messageId":"253","endLine":23,"endColumn":25},{"ruleId":"250","severity":1,"message":"258","line":24,"column":11,"nodeType":"252","messageId":"253","endLine":24,"endColumn":18},{"ruleId":"250","severity":1,"message":"307","line":26,"column":11,"nodeType":"252","messageId":"253","endLine":26,"endColumn":20},{"ruleId":"250","severity":1,"message":"308","line":32,"column":12,"nodeType":"252","messageId":"253","endLine":32,"endColumn":23},{"ruleId":"250","severity":1,"message":"309","line":32,"column":25,"nodeType":"252","messageId":"253","endLine":32,"endColumn":39},{"ruleId":"250","severity":1,"message":"310","line":33,"column":12,"nodeType":"252","messageId":"253","endLine":33,"endColumn":20},{"ruleId":"250","severity":1,"message":"311","line":33,"column":22,"nodeType":"252","messageId":"253","endLine":33,"endColumn":33},{"ruleId":"250","severity":1,"message":"312","line":74,"column":31,"nodeType":"252","messageId":"253","endLine":74,"endColumn":36},{"ruleId":"250","severity":1,"message":"313","line":91,"column":31,"nodeType":"252","messageId":"253","endLine":91,"endColumn":36},{"ruleId":"250","severity":1,"message":"314","line":92,"column":31,"nodeType":"252","messageId":"253","endLine":92,"endColumn":41},{"ruleId":"315","severity":1,"message":"316","line":157,"column":33,"nodeType":"317","messageId":"291","endLine":157,"endColumn":41},{"ruleId":"250","severity":1,"message":"297","line":1,"column":38,"nodeType":"252","messageId":"253","endLine":1,"endColumn":44},{"ruleId":"250","severity":1,"message":"254","line":1,"column":46,"nodeType":"252","messageId":"253","endLine":1,"endColumn":55},{"ruleId":"250","severity":1,"message":"318","line":2,"column":16,"nodeType":"252","messageId":"253","endLine":2,"endColumn":21},{"ruleId":"250","severity":1,"message":"319","line":8,"column":8,"nodeType":"252","messageId":"253","endLine":8,"endColumn":23},{"ruleId":"250","severity":1,"message":"255","line":11,"column":10,"nodeType":"252","messageId":"253","endLine":11,"endColumn":22},{"ruleId":"250","severity":1,"message":"298","line":11,"column":35,"nodeType":"252","messageId":"253","endLine":11,"endColumn":39},{"ruleId":"250","severity":1,"message":"299","line":11,"column":41,"nodeType":"252","messageId":"253","endLine":11,"endColumn":46},{"ruleId":"250","severity":1,"message":"320","line":24,"column":22,"nodeType":"252","messageId":"253","endLine":24,"endColumn":31},{"ruleId":"250","severity":1,"message":"305","line":28,"column":10,"nodeType":"252","messageId":"253","endLine":28,"endColumn":23},{"ruleId":"250","severity":1,"message":"307","line":64,"column":11,"nodeType":"252","messageId":"253","endLine":64,"endColumn":20},{"ruleId":"266","severity":1,"message":"321","line":115,"column":8,"nodeType":"268","endLine":115,"endColumn":10,"suggestions":"322"},{"ruleId":"266","severity":1,"message":"323","line":135,"column":8,"nodeType":"268","endLine":135,"endColumn":15,"suggestions":"324"},{"ruleId":"250","severity":1,"message":"325","line":146,"column":19,"nodeType":"252","messageId":"253","endLine":146,"endColumn":24},{"ruleId":"266","severity":1,"message":"321","line":281,"column":8,"nodeType":"268","endLine":281,"endColumn":28,"suggestions":"326"},{"ruleId":"250","severity":1,"message":"327","line":460,"column":11,"nodeType":"252","messageId":"253","endLine":460,"endColumn":21},{"ruleId":"328","severity":1,"message":"329","line":539,"column":25,"nodeType":"330","endLine":539,"endColumn":170},{"ruleId":"250","severity":1,"message":"331","line":1,"column":13,"nodeType":"252","messageId":"253","endLine":1,"endColumn":21},{"ruleId":"250","severity":1,"message":"296","line":3,"column":17,"nodeType":"252","messageId":"253","endLine":3,"endColumn":26},{"ruleId":"250","severity":1,"message":"297","line":3,"column":38,"nodeType":"252","messageId":"253","endLine":3,"endColumn":44},{"ruleId":"250","severity":1,"message":"332","line":4,"column":10,"nodeType":"252","messageId":"253","endLine":4,"endColumn":20},{"ruleId":"250","severity":1,"message":"333","line":4,"column":22,"nodeType":"252","messageId":"253","endLine":4,"endColumn":26},{"ruleId":"250","severity":1,"message":"334","line":4,"column":28,"nodeType":"252","messageId":"253","endLine":4,"endColumn":37},{"ruleId":"250","severity":1,"message":"255","line":6,"column":3,"nodeType":"252","messageId":"253","endLine":6,"endColumn":15},{"ruleId":"250","severity":1,"message":"298","line":8,"column":3,"nodeType":"252","messageId":"253","endLine":8,"endColumn":7},{"ruleId":"250","severity":1,"message":"299","line":9,"column":3,"nodeType":"252","messageId":"253","endLine":9,"endColumn":8},{"ruleId":"250","severity":1,"message":"305","line":16,"column":10,"nodeType":"252","messageId":"253","endLine":16,"endColumn":23},{"ruleId":"250","severity":1,"message":"306","line":16,"column":25,"nodeType":"252","messageId":"253","endLine":16,"endColumn":41},{"ruleId":"250","severity":1,"message":"335","line":17,"column":10,"nodeType":"252","messageId":"253","endLine":17,"endColumn":20},{"ruleId":"250","severity":1,"message":"256","line":18,"column":8,"nodeType":"252","messageId":"253","endLine":18,"endColumn":12},{"ruleId":"250","severity":1,"message":"303","line":19,"column":10,"nodeType":"252","messageId":"253","endLine":19,"endColumn":19},{"ruleId":"250","severity":1,"message":"302","line":19,"column":21,"nodeType":"252","messageId":"253","endLine":19,"endColumn":29},{"ruleId":"250","severity":1,"message":"336","line":19,"column":31,"nodeType":"252","messageId":"253","endLine":19,"endColumn":33},{"ruleId":"250","severity":1,"message":"264","line":24,"column":9,"nodeType":"252","messageId":"253","endLine":24,"endColumn":23},{"ruleId":"250","severity":1,"message":"337","line":30,"column":10,"nodeType":"252","messageId":"253","endLine":30,"endColumn":14},{"ruleId":"250","severity":1,"message":"338","line":31,"column":10,"nodeType":"252","messageId":"253","endLine":31,"endColumn":21},{"ruleId":"250","severity":1,"message":"251","line":1,"column":14,"nodeType":"252","messageId":"253","endLine":1,"endColumn":24},{"ruleId":"250","severity":1,"message":"302","line":1,"column":26,"nodeType":"252","messageId":"253","endLine":1,"endColumn":34},{"ruleId":"250","severity":1,"message":"254","line":4,"column":46,"nodeType":"252","messageId":"253","endLine":4,"endColumn":55},{"ruleId":"250","severity":1,"message":"339","line":5,"column":45,"nodeType":"252","messageId":"253","endLine":5,"endColumn":55},{"ruleId":"250","severity":1,"message":"255","line":8,"column":10,"nodeType":"252","messageId":"253","endLine":8,"endColumn":22},{"ruleId":"250","severity":1,"message":"340","line":11,"column":3,"nodeType":"252","messageId":"253","endLine":11,"endColumn":11},{"ruleId":"250","severity":1,"message":"341","line":14,"column":8,"nodeType":"252","messageId":"253","endLine":14,"endColumn":13},{"ruleId":"250","severity":1,"message":"342","line":16,"column":8,"nodeType":"252","messageId":"253","endLine":16,"endColumn":18},{"ruleId":"250","severity":1,"message":"343","line":17,"column":8,"nodeType":"252","messageId":"253","endLine":17,"endColumn":17},{"ruleId":"250","severity":1,"message":"256","line":20,"column":8,"nodeType":"252","messageId":"253","endLine":20,"endColumn":12},{"ruleId":"250","severity":1,"message":"257","line":22,"column":8,"nodeType":"252","messageId":"253","endLine":22,"endColumn":16},{"ruleId":"250","severity":1,"message":"344","line":24,"column":10,"nodeType":"252","messageId":"253","endLine":24,"endColumn":15},{"ruleId":"250","severity":1,"message":"345","line":24,"column":17,"nodeType":"252","messageId":"253","endLine":24,"endColumn":20},{"ruleId":"250","severity":1,"message":"346","line":28,"column":8,"nodeType":"252","messageId":"253","endLine":28,"endColumn":16},{"ruleId":"250","severity":1,"message":"258","line":41,"column":9,"nodeType":"252","messageId":"253","endLine":41,"endColumn":16},{"ruleId":"250","severity":1,"message":"259","line":44,"column":10,"nodeType":"252","messageId":"253","endLine":44,"endColumn":15},{"ruleId":"250","severity":1,"message":"260","line":44,"column":17,"nodeType":"252","messageId":"253","endLine":44,"endColumn":25},{"ruleId":"250","severity":1,"message":"261","line":45,"column":17,"nodeType":"252","messageId":"253","endLine":45,"endColumn":25},{"ruleId":"250","severity":1,"message":"347","line":46,"column":10,"nodeType":"252","messageId":"253","endLine":46,"endColumn":16},{"ruleId":"250","severity":1,"message":"348","line":47,"column":10,"nodeType":"252","messageId":"253","endLine":47,"endColumn":23},{"ruleId":"250","severity":1,"message":"349","line":49,"column":10,"nodeType":"252","messageId":"253","endLine":49,"endColumn":18},{"ruleId":"250","severity":1,"message":"350","line":50,"column":21,"nodeType":"252","messageId":"253","endLine":50,"endColumn":31},{"ruleId":"250","severity":1,"message":"351","line":52,"column":10,"nodeType":"252","messageId":"253","endLine":52,"endColumn":17},{"ruleId":"250","severity":1,"message":"262","line":52,"column":19,"nodeType":"252","messageId":"253","endLine":52,"endColumn":29},{"ruleId":"250","severity":1,"message":"352","line":58,"column":10,"nodeType":"252","messageId":"253","endLine":58,"endColumn":21},{"ruleId":"250","severity":1,"message":"353","line":59,"column":10,"nodeType":"252","messageId":"253","endLine":59,"endColumn":14},{"ruleId":"250","severity":1,"message":"354","line":61,"column":22,"nodeType":"252","messageId":"253","endLine":61,"endColumn":35},{"ruleId":"250","severity":1,"message":"355","line":62,"column":10,"nodeType":"252","messageId":"253","endLine":62,"endColumn":17},{"ruleId":"250","severity":1,"message":"263","line":63,"column":10,"nodeType":"252","messageId":"253","endLine":63,"endColumn":20},{"ruleId":"250","severity":1,"message":"356","line":63,"column":22,"nodeType":"252","messageId":"253","endLine":63,"endColumn":30},{"ruleId":"250","severity":1,"message":"357","line":65,"column":16,"nodeType":"252","messageId":"253","endLine":65,"endColumn":23},{"ruleId":"250","severity":1,"message":"358","line":68,"column":9,"nodeType":"252","messageId":"253","endLine":68,"endColumn":24},{"ruleId":"250","severity":1,"message":"264","line":70,"column":9,"nodeType":"252","messageId":"253","endLine":70,"endColumn":23},{"ruleId":"250","severity":1,"message":"359","line":98,"column":9,"nodeType":"252","messageId":"253","endLine":98,"endColumn":15},{"ruleId":"250","severity":1,"message":"270","line":143,"column":9,"nodeType":"252","messageId":"253","endLine":143,"endColumn":18},{"ruleId":"266","severity":1,"message":"271","line":194,"column":6,"nodeType":"268","endLine":194,"endColumn":20,"suggestions":"360"},{"ruleId":"266","severity":1,"message":"361","line":262,"column":6,"nodeType":"268","endLine":262,"endColumn":8,"suggestions":"362"},{"ruleId":"250","severity":1,"message":"279","line":302,"column":9,"nodeType":"252","messageId":"253","endLine":302,"endColumn":11},{"ruleId":"250","severity":1,"message":"363","line":308,"column":9,"nodeType":"252","messageId":"253","endLine":308,"endColumn":16},{"ruleId":"250","severity":1,"message":"364","line":327,"column":9,"nodeType":"252","messageId":"253","endLine":327,"endColumn":18},{"ruleId":"250","severity":1,"message":"365","line":347,"column":9,"nodeType":"252","messageId":"253","endLine":347,"endColumn":22},{"ruleId":"250","severity":1,"message":"366","line":351,"column":9,"nodeType":"252","messageId":"253","endLine":351,"endColumn":22},{"ruleId":"250","severity":1,"message":"280","line":355,"column":9,"nodeType":"252","messageId":"253","endLine":355,"endColumn":20},{"ruleId":"281","severity":1,"message":"282","line":464,"column":21,"nodeType":"283","endLine":464,"endColumn":80},{"ruleId":"250","severity":1,"message":"296","line":4,"column":17,"nodeType":"252","messageId":"253","endLine":4,"endColumn":26},{"ruleId":"250","severity":1,"message":"367","line":4,"column":28,"nodeType":"252","messageId":"253","endLine":4,"endColumn":36},{"ruleId":"250","severity":1,"message":"297","line":4,"column":38,"nodeType":"252","messageId":"253","endLine":4,"endColumn":44},{"ruleId":"250","severity":1,"message":"332","line":5,"column":10,"nodeType":"252","messageId":"253","endLine":5,"endColumn":20},{"ruleId":"250","severity":1,"message":"333","line":5,"column":22,"nodeType":"252","messageId":"253","endLine":5,"endColumn":26},{"ruleId":"250","severity":1,"message":"334","line":5,"column":28,"nodeType":"252","messageId":"253","endLine":5,"endColumn":37},{"ruleId":"250","severity":1,"message":"368","line":15,"column":13,"nodeType":"252","messageId":"253","endLine":15,"endColumn":21},{"ruleId":"250","severity":1,"message":"254","line":1,"column":46,"nodeType":"252","messageId":"253","endLine":1,"endColumn":55},{"ruleId":"250","severity":1,"message":"333","line":7,"column":3,"nodeType":"252","messageId":"253","endLine":7,"endColumn":7},{"ruleId":"250","severity":1,"message":"305","line":13,"column":10,"nodeType":"252","messageId":"253","endLine":13,"endColumn":23},{"ruleId":"250","severity":1,"message":"369","line":18,"column":10,"nodeType":"252","messageId":"253","endLine":18,"endColumn":18},{"ruleId":"250","severity":1,"message":"370","line":24,"column":9,"nodeType":"252","messageId":"253","endLine":24,"endColumn":14},{"ruleId":"250","severity":1,"message":"307","line":27,"column":9,"nodeType":"252","messageId":"253","endLine":27,"endColumn":18},{"ruleId":"250","severity":1,"message":"371","line":59,"column":15,"nodeType":"252","messageId":"253","endLine":59,"endColumn":18},{"ruleId":"250","severity":1,"message":"372","line":74,"column":15,"nodeType":"252","messageId":"253","endLine":74,"endColumn":24},{"ruleId":"250","severity":1,"message":"373","line":82,"column":17,"nodeType":"252","messageId":"253","endLine":82,"endColumn":20},{"ruleId":"250","severity":1,"message":"367","line":1,"column":28,"nodeType":"252","messageId":"253","endLine":1,"endColumn":36},{"ruleId":"250","severity":1,"message":"296","line":1,"column":38,"nodeType":"252","messageId":"253","endLine":1,"endColumn":47},{"ruleId":"250","severity":1,"message":"318","line":2,"column":22,"nodeType":"252","messageId":"253","endLine":2,"endColumn":27},{"ruleId":"250","severity":1,"message":"374","line":2,"column":29,"nodeType":"252","messageId":"253","endLine":2,"endColumn":39},{"ruleId":"250","severity":1,"message":"333","line":2,"column":41,"nodeType":"252","messageId":"253","endLine":2,"endColumn":45},{"ruleId":"250","severity":1,"message":"334","line":2,"column":53,"nodeType":"252","messageId":"253","endLine":2,"endColumn":62},{"ruleId":"250","severity":1,"message":"375","line":2,"column":64,"nodeType":"252","messageId":"253","endLine":2,"endColumn":82},{"ruleId":"250","severity":1,"message":"341","line":2,"column":84,"nodeType":"252","messageId":"253","endLine":2,"endColumn":89},{"ruleId":"250","severity":1,"message":"255","line":4,"column":10,"nodeType":"252","messageId":"253","endLine":4,"endColumn":22},{"ruleId":"250","severity":1,"message":"376","line":4,"column":24,"nodeType":"252","messageId":"253","endLine":4,"endColumn":33},{"ruleId":"250","severity":1,"message":"298","line":4,"column":35,"nodeType":"252","messageId":"253","endLine":4,"endColumn":39},{"ruleId":"250","severity":1,"message":"299","line":4,"column":41,"nodeType":"252","messageId":"253","endLine":4,"endColumn":46},{"ruleId":"250","severity":1,"message":"377","line":4,"column":48,"nodeType":"252","messageId":"253","endLine":4,"endColumn":50},{"ruleId":"250","severity":1,"message":"378","line":4,"column":52,"nodeType":"252","messageId":"253","endLine":4,"endColumn":56},{"ruleId":"315","severity":1,"message":"379","line":39,"column":13,"nodeType":"317","messageId":"291","endLine":39,"endColumn":24},{"ruleId":"380","severity":1,"message":"381","line":123,"column":13,"nodeType":"382","messageId":"383","endLine":146,"endColumn":14},{"ruleId":"288","severity":1,"message":"384","line":210,"column":36,"nodeType":"290","messageId":"291","endLine":210,"endColumn":38},{"ruleId":"288","severity":1,"message":"384","line":257,"column":67,"nodeType":"290","messageId":"291","endLine":257,"endColumn":69},{"ruleId":"288","severity":1,"message":"384","line":260,"column":32,"nodeType":"290","messageId":"291","endLine":260,"endColumn":34},{"ruleId":"250","severity":1,"message":"385","line":318,"column":13,"nodeType":"252","messageId":"253","endLine":318,"endColumn":16},{"ruleId":"250","severity":1,"message":"385","line":322,"column":13,"nodeType":"252","messageId":"253","endLine":322,"endColumn":16},{"ruleId":"250","severity":1,"message":"385","line":326,"column":13,"nodeType":"252","messageId":"253","endLine":326,"endColumn":16},{"ruleId":"250","severity":1,"message":"385","line":329,"column":13,"nodeType":"252","messageId":"253","endLine":329,"endColumn":16},{"ruleId":"386","severity":1,"message":"387","line":342,"column":77,"nodeType":"290","messageId":"388","endLine":342,"endColumn":78},{"ruleId":"386","severity":1,"message":"387","line":343,"column":77,"nodeType":"290","messageId":"388","endLine":343,"endColumn":78},{"ruleId":"389","severity":1,"message":"390","line":350,"column":42,"nodeType":"391","messageId":"392","endLine":350,"endColumn":43,"suggestions":"393"},{"ruleId":"389","severity":1,"message":"390","line":376,"column":34,"nodeType":"391","messageId":"392","endLine":376,"endColumn":35,"suggestions":"394"},"no-unused-vars","'storageRef' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'useSwipeable' is defined but never used.","'swal' is defined but never used.","'CryptoJS' is defined but never used.","'history' is assigned a value but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'setGuest' is assigned a value but never used.","'setBalance' is assigned a value but never used.","'messgOwner' is assigned a value but never used.","'dispatchAction' is assigned a value but never used.","'handleChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'replay'. Either include it or remove the dependency array.","ArrayExpression",["395"],"'totalCost' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'firestore', 'state.value', 'turn', and 'user_data.is_creator'. Either include them or remove the dependency array.",["396"],"'firstName' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchUpdate', 'user_data.is_creator', and 'user_data.joinedSpace'. Either include them or remove the dependency array.",["397"],"no-undef","'originalText' is not defined.","undef","'id' is assigned a value but never used.","'sendMessage' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["398"],"no-negated-in-lhs",["399"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'LEFT' is defined but never used.","'RIGHT' is defined but never used.","'IconButton' is defined but never used.","'Button' is defined but never used.","'database' is defined but never used.","'messaging' is defined but never used.","'TextBroadCast' is defined but never used.","'SET_KEYS_TRUE' is defined but never used.","'UPDATE_USER_DATA' is defined but never used.","'user_data' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.","'watchers' is assigned a value but never used.","'setWatchers' is assigned a value but never used.","'token' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","no-dupe-keys","Duplicate key 'fontSize'.","ObjectExpression","'Image' is defined but never used.","'MeetingRoomIcon' is defined but never used.","'useParams' is defined but never used.","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["400"],"React Hook useEffect has missing dependencies: 'name' and 'time'. Either include them or remove the dependency array.",["401"],"'payId' is assigned a value but never used.",["402"],"'joiAuction' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'firebase' is defined but never used.","'Dimensions' is defined but never used.","'Text' is defined but never used.","'TextInput' is defined but never used.","'useHistory' is defined but never used.","'db' is defined but never used.","'open' is assigned a value but never used.","'privateCall' is assigned a value but never used.","'ScrollView' is defined but never used.","'Snackbar' is defined but never used.","'Alert' is defined but never used.","'RecordPage' is defined but never used.","'VideoRoom' is defined but never used.","'Crypt' is defined but never used.","'RSA' is defined but never used.","'Donation' is defined but never used.","'status' is assigned a value but never used.","'showRecording' is assigned a value but never used.","'videoURL' is assigned a value but never used.","'setPrivate' is assigned a value but never used.","'balance' is assigned a value but never used.","'accceptance' is assigned a value but never used.","'main' is assigned a value but never used.","'setReplayText' is assigned a value but never used.","'message' is assigned a value but never used.","'setOwner' is assigned a value but never used.","'setJoin' is assigned a value but never used.","'recordedMessage' is assigned a value but never used.","'replay' is assigned a value but never used.",["403"],"React Hook useEffect has missing dependencies: 'fetchUpdate', 'props.creator', and 'props.spaceId'. Either include them or remove the dependency array.",["404"],"'getTurn' is assigned a value but never used.","'leaveTurn' is assigned a value but never used.","'acceptRequest' is assigned a value but never used.","'rejectRequest' is assigned a value but never used.","'useState' is defined but never used.","'username' is assigned a value but never used.","'videoSrc' is assigned a value but never used.","'live2' is assigned a value but never used.","'rec' is assigned a value but never used.","'callerUrl' is assigned a value but never used.","'vid' is assigned a value but never used.","'StyleSheet' is defined but never used.","'TouchableHighlight' is defined but never used.","'Swipeable' is defined but never used.","'UP' is defined but never used.","'DOWN' is defined but never used.","Duplicate key 'callRequest'.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Expected '!==' and instead saw '!='.","'msg' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-useless-escape","Unnecessary escape character: \\;.","Literal","unnecessaryEscape",["405","406"],["407","408"],{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},{"desc":"413","fix":"414"},"no-global-assign","no-unsafe-negation",{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"411","fix":"421"},{"desc":"422","fix":"423"},{"messageId":"424","fix":"425","desc":"426"},{"messageId":"427","fix":"428","desc":"429"},{"messageId":"424","fix":"430","desc":"426"},{"messageId":"427","fix":"431","desc":"429"},"Update the dependencies array to be: [replay, replayText]",{"range":"432","text":"433"},"Update the dependencies array to be: [firestore, singleLetter, state.value, turn, user_data.is_creator]",{"range":"434","text":"435"},"Update the dependencies array to be: [fetchUpdate, user_data.is_creator, user_data.joinedSpace]",{"range":"436","text":"437"},"Update the dependencies array to be: [name]",{"range":"438","text":"439"},"Update the dependencies array to be: [count, name, time]",{"range":"440","text":"441"},"Update the dependencies array to be: [name, receiver, transfer]",{"range":"442","text":"443"},{"range":"444","text":"435"},"Update the dependencies array to be: [fetchUpdate, props.creator, props.spaceId]",{"range":"445","text":"446"},"removeEscape",{"range":"447","text":"448"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"449","text":"450"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"451","text":"448"},{"range":"452","text":"450"},[2617,2629],"[replay, replayText]",[5807,5821],"[firestore, singleLetter, state.value, turn, user_data.is_creator]",[8480,8482],"[fetchUpdate, user_data.is_creator, user_data.joinedSpace]",[3876,3878],"[name]",[4613,4620],"[count, name, time]",[11938,11958],"[name, receiver, transfer]",[5350,5364],[6879,6881],"[fetchUpdate, props.creator, props.spaceId]",[14415,14416],"",[14415,14415],"\\",[15156,15157],[15156,15156]]