[{"/Users/mohit/Downloads/achintya/src/index.js":"1","/Users/mohit/Downloads/achintya/src/reportWebVitals.js":"2","/Users/mohit/Downloads/achintya/src/App.js":"3","/Users/mohit/Downloads/achintya/src/constants.js":"4","/Users/mohit/Downloads/achintya/src/Login.js":"5","/Users/mohit/Downloads/achintya/src/homepage.js":"6","/Users/mohit/Downloads/achintya/src/Store/reducers/globalStateReducer.js":"7","/Users/mohit/Downloads/achintya/src/Store/reducers/globalUserDataReducer.js":"8","/Users/mohit/Downloads/achintya/src/Store/actions.js":"9","/Users/mohit/Downloads/achintya/src/Loading.js":"10","/Users/mohit/Downloads/achintya/src/Hooks/useActionDispatcher.js":"11"},{"size":455,"mtime":1612006334905,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1611219670379,"results":"14","hashOfConfig":"13"},{"size":1941,"mtime":1612005704491,"results":"15","hashOfConfig":"13"},{"size":348,"mtime":1610281502736,"results":"16","hashOfConfig":"13"},{"size":4352,"mtime":1612006926881,"results":"17","hashOfConfig":"13"},{"size":19659,"mtime":1612016295909,"results":"18","hashOfConfig":"13"},{"size":736,"mtime":1608351920000,"results":"19","hashOfConfig":"13"},{"size":765,"mtime":1611977373059,"results":"20","hashOfConfig":"13"},{"size":98,"mtime":1604389232000,"results":"21","hashOfConfig":"13"},{"size":671,"mtime":1610972079000,"results":"22","hashOfConfig":"13"},{"size":636,"mtime":1604389232000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ipjpcc",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/mohit/Downloads/achintya/src/index.js",[],["50","51"],"/Users/mohit/Downloads/achintya/src/reportWebVitals.js",[],"/Users/mohit/Downloads/achintya/src/App.js",["52"],"import firebase from \"firebase\";\nimport { View } from \"react-native\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { combineReducers, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport './App.css';\nimport Login from './Login'\n/*                           Firebase configurations                          */\n/* -------------------------------------------------------------------------- */\n\nimport { FIREBASE_CONFIG } from \"./constants\";\n\n/* ------------------------------ Redux imports ----------------------------- */\nimport globalStateReducer from \"./Store/reducers/globalStateReducer\";\nimport globalUserDataReducer from \"./Store/reducers/globalUserDataReducer\";\n\n/* --------------------------- Initialize Firebase -------------------------- */\nconst app = firebase.initializeApp(FIREBASE_CONFIG);\nexport const db = app.database();\n\nexport const storageRef = firebase.storage().ref();\nexport const fbDatabase = firebase.database();\nexport const database = firebase.firestore()\nexport const messaging = app.messaging();\nexport const firebaseAuth = firebase.auth();\nexport const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\n\n/*                             Redux Configuration                            */\n/* -------------------------------------------------------------------------- */\nconst rootReducers = combineReducers({\n  globalState: globalStateReducer,\n  globalUserData: globalUserDataReducer,\n});\n\nconst store = createStore(rootReducers, composeWithDevTools());\n/* ----------------------------------- end ---------------------------------- */\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n        </Switch>\n      </Router>\n      {/* <Login /> */}\n    </Provider>\n\n  );\n}\n\nexport default App;\n","/Users/mohit/Downloads/achintya/src/constants.js",[],"/Users/mohit/Downloads/achintya/src/Login.js",["53","54","55","56","57","58","59","60","61","62","63"],"import React, { useEffect, useState, useRef, Component } from \"react\";\nimport firebase from \"firebase\";\nimport { View, Image, Text, Dimensions } from \"react-native\";\nimport HomePage from \"./homepage\";\nimport { db, database, messaging } from './App'\n\nimport { TextField, IconButton, Button } from \"@material-ui/core\";\n\nconst { width, height } = Dimensions.get(\"window\");\n\nlet width1 = (window.innerWidth * 9) / 10;\nif (width1 > 400) width1 = 400;\nlet height1 = width1 * (344 / 400);\n\nexport default function Login(props) {\n    console.log(height, width);\n    const [emailId, setEmail] = useState(\"\");\n    const [home, setHome] = useState(false)\n\n    const [profileId, setProfileId] = useState(\"\");\n\n    const googleLogin = async () => {\n        firebase.database().ref(`/Spaces/${profileId}`).once(\"value\", (snap) => {\n            if (!firebase.auth().currentUser && !snap.val()) {\n                var provider = new firebase.auth.GoogleAuthProvider()\n                firebase\n                    .auth()\n                    .signInWithPopup(provider)\n                    .then(function (result) {\n                        const token = result.credential.accessToken;\n                        const user = result.user;\n                        console.log(user);\n                        const email = user[\"email\"]\n                        db.ref(`/Spaces/${profileId}/`).update({\n                            balance: 0,\n                            name: user[\"displayName\"],\n                            email: user[\"email\"],\n                            uid: user[\"uid\"],\n                        })\n                        setHome(true)\n                        setEmail(email)\n                    })\n                    .catch(function (error) {\n                        const errorcode = error.code;\n                        const errorMessage = error.message;\n                        const email = error.email;\n                        const credential = error.credential;\n                        console.log(errorMessage, errorcode);\n                    });\n            } else {\n                var loggedInUser = firebase.auth().currentUser;\n                firebase.database().ref(`/Spaces/${profileId}`).once(\"value\", (snap) => {\n                    if (snap.val()) {\n                        var id = loggedInUser.email\n                        console.log(loggedInUser);\n                        setHome(true)\n                        setEmail(id)\n                    }\n                })\n            }\n        })\n    };\n\n    return (\n        <View>\n            {home === false ?\n                <View style={{ marginTop: height / 8.5, width: width1, margin: 'auto' }}>\n                    <Image\n                        style={{\n                            marginHorizontal: \"auto\",\n                            marginVertical: 20,\n                            textAlign: \"center\",\n                            maxWidth: \"100%\",\n                        }}\n                        source={{ uri: \"favicon.png\", width: width1, height: height1 }}\n                    />\n                    <Text style={{ fontSize: 28, fontWeight: 600, textAlign: 'center' }}>Achintya</Text>\n                    <br />\n                    <br />\n                    <TextField\n                        variant=\"outlined\"\n                        placeholder=\"Enter Profile Id\"\n                        size=\"small\"\n                        value={profileId}\n                        onChange={(e) => setProfileId(e.target.value)}\n                    //onClick={visitCreator}\n                    />\n                    <br />\n                    <button\n                        onClick={googleLogin}\n                        style={{\n                            fontSize: 13,\n                            color: \"white\",\n                            background: 'black',\n                            height: 38,\n                            borderRadius: 3,\n                            fontFamily: 'emoji',\n                            fontSize: 16,\n                            border: 'none',\n                            cursor: 'pointer'\n                        }}\n\n                    >\n                        Login with Google\n      </button>\n                </View>\n                :\n                <HomePage email={emailId} name={profileId} />\n            }\n        </View>\n\n    )\n}","/Users/mohit/Downloads/achintya/src/homepage.js",["64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81"],"import React, { useEffect, useState, useRef, Component } from \"react\";\nimport { View, Image, Text, Dimensions } from \"react-native\";\nimport swal from \"sweetalert\";\nimport firebase from 'firebase';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport ShareIcon from '@material-ui/icons/Share';\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSwipeable, Swipeable, LEFT, RIGHT, UP, DOWN } from \"react-swipeable\";\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport { useSelector } from \"react-redux\";\nimport useActionDispatcher from \"./Hooks/useActionDispatcher\";\nimport { SET_KEYS_TRUE, UPDATE_USER_DATA } from \"./Store/actions\";\n\nimport Loading from \"./Loading\";\n//import Creation from './text/Creation';\n\nimport { db, database, messaging } from './App'\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n}));\n\nexport default function HomePage({ name, email }) {\n    const classes = useStyles();\n    const dispatchAction = useActionDispatcher();\n    const history = useHistory();\n\n    const [amount, setAmount] = useState(0)\n    const [receiver, setReceiver] = useState(\"\")\n    const [transfer, setTransfer] = useState(null)\n\n    const [transactions, setTransactions] = useState([])\n    const [showTransactions, setShowTransactions] = useState(false)\n    const [transactionId, setTransactionId] = useState(\"\")\n\n    const [loading, setLoading] = useState(false);\n    const [room, setRoom] = useState(false)\n    const [count, setCount] = useState(0)\n    const [time, setTime] = useState(null)\n\n\n    useEffect(() => {\n        //const random = Math.floor(Math.random() * 4999)\n        db.ref(`/Spaces/${name}/`).on(\"value\", function (snap) {\n            setAmount(snap.val().balance)\n        })\n\n    }, [])\n\n    useEffect(() => {\n\n        let query;\n        if (count > 1) {\n            console.log(time, count);\n            query = database.collection(\"transactions\").where(\"wallet\", \"array-contains\", name).where(\"time\", '<', time).orderBy(\"time\", \"desc\").limit(1)\n        } else {\n            query = database.collection(\"transactions\").where(\"wallet\", \"array-contains\", name).orderBy(\"time\", \"desc\").limit(1)\n        }\n        query.get().then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                console.log(doc.id, ' => ', doc.data());\n                setTransactions(doc.data())\n                setTransactionId(doc.id)\n                setTime(doc.data().time.toDate())\n            })\n        })\n    }, [count])\n\n    const addMoney = () => {\n        swal({\n            text: 'Enter Amount',\n            content: \"input\",\n            button: {\n                text: \"Add\",\n                closeModal: true,\n            },\n        }).then((value) => {\n            const payId = \"pay_\" + Math.floor(Math.random() * 1000)\n            if (parseInt(value) < 100) {\n                alert(\"Amount should be equal or more than 100\")\n            } else {\n                // database.collection(\"transactions\").doc(payId).set({\n                //     amount: value + \"+\",\n                //     wallet: [name, \"self\"],\n                //     time: firebase.firestore.FieldValue.serverTimestamp()\n                // }).then(() => {\n                //     db.ref(`/${name}/`).update({\n                //         balance: firebase.database.ServerValue.increment(parseInt(value))\n                //     })\n                // })\n                openCheckout(parseInt(value))\n            }\n        })\n    }\n\n\n    const openCheckout = async (amount) => {\n        let options = {\n            key: \"rzp_live_1hWjIFVX8QIpW8\",\n            amount: parseInt(amount) * 100,\n            name: \"Achintya\",\n            currency: \"INR\",\n            description: `Space on Achintya`,\n            image: \"./favicon.png\",\n            handler: async function (response) {\n                console.log(response);\n                if (response.razorpay_payment_id) {\n                    await firebase.firestore().collection(\"transactions\").doc(response.razorpay_payment_id).set({\n                        paymentId: response.razorpay_payment_id,\n                        claimedAmount: parseInt(amount),\n                        wallet: [name, \"self\"],\n                        time: firebase.firestore.FieldValue.serverTimestamp()\n                    })\n                        .then(() => {\n                            firebase.firestore().collection(\"transactions\").doc(response.razorpay_payment_id).onSnapshot(async function (doc) {\n                                if (doc.data()) {\n                                    if (doc.data().paidAmount) {\n                                        if (parseInt(doc.data().paidAmount.slice(0, -1)) === parseInt(amount) && doc.data().status === 1) {\n\n                                            await firebase\n                                                .database()\n                                                .ref(`/Spaces/${name}/`)\n                                                .update({\n                                                    balance: firebase.database.ServerValue.increment(parseInt(doc.data().paidAmount.slice(0, -1))),\n                                                })\n                                                .then(() => {\n                                                    swal({\n                                                        title:\n                                                            \"Transaction Successful for INR \" + amount,\n                                                        text:\n                                                            \"Congatulations! You got your space on Achintya. You can save your Transaction ID - \" +\n                                                            response.razorpay_payment_id.replace(\"pay_\", \"\"),\n                                                        icon: \"success\",\n                                                        button: \"Okay!\",\n                                                        buttonColor: \"#000\",\n                                                    }).then(() => {\n                                                        setLoading(false);\n                                                        dispatchAction(UPDATE_USER_DATA, {\n                                                            data: {\n                                                                creator: true,\n                                                                is_creator: true,\n                                                                user_id: name,\n                                                                active_room_id: name,\n                                                            },\n                                                        });\n                                                        // firebase.database().ref(`/Spaces/${name}`).update({\n                                                        //     online: true,\n                                                        // });\n                                                        messaging\n                                                            .requestPermission()\n                                                            .then(function () {\n                                                                console.log(\"permission granted\");\n\n                                                                return messaging.getToken();\n                                                            })\n                                                            .then((token) => {\n                                                                database.collection(\"actions\").doc(name).set({\n                                                                    subscription: \"achintya\",\n                                                                    fcmtoken: token,\n                                                                    time: firebase.firestore.FieldValue.serverTimestamp()\n                                                                })\n                                                            });\n                                                        //history.push(`/${name}`);\n                                                    });\n                                                });\n                                        } else {\n                                            setLoading(true);\n                                            // history.push(`/`);\n                                        }\n                                    } else {\n                                        setLoading(true);\n                                    }\n                                } else {\n                                    setLoading(true);\n                                }\n                            });\n                        });\n                }\n            },\n            prefill: {\n                name: \"\",\n                email: \"\",\n            },\n            notes: {\n                address: \"Hello World\",\n            },\n            theme: {\n                color: \"#000000\",\n            },\n        };\n\n        let rzp = new window.Razorpay(options);\n        rzp.open();\n    };\n\n    useEffect(() => {\n        if (receiver !== \"\" && transfer !== null) {\n            const payId = \"pay_\" + Math.floor(Math.random() * 1000)\n            database.collection(\"transactions\").doc(payId).set({\n                paidAmount: transfer + \"-\",\n                wallet: [name, receiver],\n                time: firebase.firestore.FieldValue.serverTimestamp()\n            }).then(() => {\n                db.ref(`/Spaces/${name}/`).update({\n                    balance: firebase.database.ServerValue.increment(-parseInt(transfer))\n                })\n                db.ref(`/Spaces/${receiver}/`).update({\n                    balance: firebase.database.ServerValue.increment(parseInt(transfer))\n                })\n            })\n            console.log(receiver, transfer);\n        }\n\n    }, [receiver, transfer])\n\n    const transferMoney = () => {\n        swal({\n            text: 'Reciver\\'s name',\n            content: \"input\",\n            button: {\n                text: \"Proceed\",\n                closeModal: true,\n            },\n        }).then((value) => {\n            console.log(value);\n            setReceiver(value)\n            swal({\n                text: 'Enter Amount',\n                content: \"input\",\n                button: {\n                    text: \"Transfer\",\n                    closeModal: true,\n                },\n            }).then((value) => {\n                setTransfer(value)\n                //console.log(receiver, value);\n            })\n        })\n    }\n\n    const onSwiping = ({ dir }) => {\n        if (dir === UP) {\n            console.log(transactions.paymentId);\n            setShowTransactions(true)\n            setCount(count + 1)\n        }\n    }\n\n    return loading ? (\n        <Loading />\n    ) : (\n            <Swipeable onSwiped={(eventData) => onSwiping(eventData)} preventDefaultTouchmoveEvent={true} trackMouse={true} >\n\n                <View>\n                    {showTransactions === false ?\n                        <View style={{ marginTop: height / 4 }}>\n                            <View style={{ display: 'flex', alignItems: 'center' }}>\n                                <Text style={{ fontSize: width < 500 ? 95 : 140 }}>\n                                    <span>&#8377;</span>: {amount}\n                                </Text>\n                                <br />\n                                <Text style={{ fontSize: 18, fontFamily: 'auto' }}>\n                                    {email}\n                                </Text>\n                            </View>\n                            <br />\n                            <br />\n                            <View style={{ display: 'flex', flexFlow: 'column' }}>\n                                <Button\n                                    variant=\"contained\"\n                                    className={classes.button}\n                                    startIcon={<AddIcon />}\n                                    style={{ width: width / 5, margin: 'auto', background: 'black', color: 'white', cursor: 'pointer' }}\n                                    onClick={addMoney}\n                                >\n                                    Add Money\n      </Button>\n                                <br />\n                                <Button\n                                    variant=\"contained\"\n                                    className={classes.button}\n                                    startIcon={<ShareIcon />}\n                                    style={{ width: width / 5, margin: 'auto', background: 'black', color: 'white', cursor: 'pointer' }}\n                                    onClick={transferMoney}\n                                >\n                                    Transfer Money\n      </Button>\n                                {/* <Button\n                                    variant=\"contained\"\n                                    className={classes.button}\n                                    startIcon={<MeetingRoomIcon />}\n                                    style={{ width: width / 5, margin: 'auto', background: 'black', color: 'white', cursor: 'pointer' }}\n                                    onClick={() => setRoom(true)}\n                                >\n                                    Go To Room\n      </Button> */}\n                            </View>\n\n                        </View>\n                        :\n                        <View style={{ marginTop: (height / 7) }}>\n                            <h3 style={{ textAlign: 'center', fontFamily: 'auto', marginBottom: 20 }}>Transaction history</h3>\n                            <View style={{ display: 'flex', flexFlow: width < 600 ? \"column\" : 'row', flexWrap: 'wrap', margin: width < 600 ? \"auto\" : 15, marginTop: width < 600 ? 15 : null, justifyContent: 'center' }}>\n\n                                <Card className={classes.root} style={{ width: width / 1.2, margin: 15, height: height / 1.9 }}>\n                                    <CardContent style={{ marginTop: 15 }}>\n                                        <View style={{ display: 'flex', flexFlow: 'row', justifyContent: 'space-evenly', alignItems: 'center' }}>\n                                            <View>\n                                                <Typography variant=\"h5\" component=\"h2\" style={{ textAlign: 'center', marginBottom: 5, fontSize: 16 }}>\n                                                    {transactions.paidAmount.charAt(transactions.paidAmount.length - 1) === \"+\" ? \"Money Added\" : \"Money Paid\"}\n                                                </Typography>\n                                                <Typography variant=\"h5\" component=\"h2\" style={{ fontWeight: 600, marginBottom: 5, fontSize: 20, marginTop: 5 }}>\n                                                    <span>&#8377;</span> {transactions.paidAmount.slice(0, -1)}\n                                                </Typography>\n\n\n                                                <View style={{ display: 'flex', flexFlow: 'row', marginBottom: 15, marginTop: 10 }}>\n                                                    <Typography variant=\"h5\" component=\"h2\" style={{ textAlign: 'center', fontSize: 11 }}>\n                                                        {transactions.time.toDate().toString().slice(3, 10)},{\"  \"}\n                                                    </Typography>\n                                                    <Typography variant=\"h5\" component=\"h2\" style={{ textAlign: 'center', marginLeft: 2, fontSize: 11 }}>\n                                                        {transactions.time.toDate().toString().slice(15, 21)}\n                                                    </Typography>\n                                                </View>\n                                            </View>\n                                            <Typography variant=\"h5\" component=\"h2\" style={{ textAlign: 'center', marginBottom: 5, fontSize: 20 }}>\n                                                {transactions.paidAmount.charAt(transactions.paidAmount.length - 1) === \"+\" ? <button style={{ border: 'none', borderRadius: '50%', background: '#24cc81', color: 'white', width: 20, height: 20 }}>+</button> : <button style={{ border: 'none', borderRadius: '50%', background: '#f84b6e', color: 'white', fontSize: 16, width: 20 }}>-</button>}\n                                            </Typography>\n\n\n                                        </View>\n\n                                        <View style={{ height: 0.5, width: '100%', background: 'black', marginTop: '2%' }}></View>\n                                        <br />\n                                        <View style={{ margin: 15, marginTop: '2%' }}>\n                                            <Text>Transaction Id: {transactionId}</Text>\n                                        </View>\n                                        <TableContainer component={Paper} style={{ marginTop: '5%' }}>\n                                            <Table className={classes.table} aria-label=\"simple table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <TableCell>Dr: </TableCell>\n                                                        <TableCell align=\"right\">Cr: </TableCell>\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody>\n                                                    <TableRow >\n                                                        <TableCell component=\"th\" scope=\"row\" style={{ fontFamily: 'auto' }}>\n                                                            {transactions.wallet[0]}\n                                                        </TableCell>\n                                                        <TableCell align=\"right\">{transactions.wallet[1]}</TableCell>\n                                                    </TableRow>\n                                                </TableBody>\n                                            </Table>\n                                        </TableContainer>\n\n                                    </CardContent>\n                                </Card>\n\n                            </View>\n\n                        </View>\n\n                    }\n                </View>\n            </Swipeable>\n        )\n\n} ","/Users/mohit/Downloads/achintya/src/Store/reducers/globalStateReducer.js",[],"/Users/mohit/Downloads/achintya/src/Store/reducers/globalUserDataReducer.js",[],"/Users/mohit/Downloads/achintya/src/Store/actions.js",[],"/Users/mohit/Downloads/achintya/src/Loading.js",[],"/Users/mohit/Downloads/achintya/src/Hooks/useActionDispatcher.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":14},{"ruleId":"86","severity":1,"message":"90","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"91","line":1,"column":38,"nodeType":"88","messageId":"89","endLine":1,"endColumn":44},{"ruleId":"86","severity":1,"message":"92","line":1,"column":46,"nodeType":"88","messageId":"89","endLine":1,"endColumn":55},{"ruleId":"86","severity":1,"message":"93","line":5,"column":14,"nodeType":"88","messageId":"89","endLine":5,"endColumn":22},{"ruleId":"86","severity":1,"message":"94","line":5,"column":24,"nodeType":"88","messageId":"89","endLine":5,"endColumn":33},{"ruleId":"86","severity":1,"message":"95","line":7,"column":21,"nodeType":"88","messageId":"89","endLine":7,"endColumn":31},{"ruleId":"86","severity":1,"message":"96","line":7,"column":33,"nodeType":"88","messageId":"89","endLine":7,"endColumn":39},{"ruleId":"86","severity":1,"message":"97","line":30,"column":31,"nodeType":"88","messageId":"89","endLine":30,"endColumn":36},{"ruleId":"86","severity":1,"message":"98","line":46,"column":31,"nodeType":"88","messageId":"89","endLine":46,"endColumn":36},{"ruleId":"86","severity":1,"message":"99","line":47,"column":31,"nodeType":"88","messageId":"89","endLine":47,"endColumn":41},{"ruleId":"100","severity":1,"message":"101","line":98,"column":29,"nodeType":"102","messageId":"103","endLine":98,"endColumn":37},{"ruleId":"86","severity":1,"message":"91","line":1,"column":38,"nodeType":"88","messageId":"89","endLine":1,"endColumn":44},{"ruleId":"86","severity":1,"message":"92","line":1,"column":46,"nodeType":"88","messageId":"89","endLine":1,"endColumn":55},{"ruleId":"86","severity":1,"message":"104","line":2,"column":16,"nodeType":"88","messageId":"89","endLine":2,"endColumn":21},{"ruleId":"86","severity":1,"message":"105","line":8,"column":8,"nodeType":"88","messageId":"89","endLine":8,"endColumn":23},{"ruleId":"86","severity":1,"message":"106","line":10,"column":10,"nodeType":"88","messageId":"89","endLine":10,"endColumn":22},{"ruleId":"86","severity":1,"message":"107","line":10,"column":35,"nodeType":"88","messageId":"89","endLine":10,"endColumn":39},{"ruleId":"86","severity":1,"message":"108","line":10,"column":41,"nodeType":"88","messageId":"89","endLine":10,"endColumn":46},{"ruleId":"86","severity":1,"message":"109","line":10,"column":52,"nodeType":"88","messageId":"89","endLine":10,"endColumn":56},{"ruleId":"86","severity":1,"message":"110","line":23,"column":22,"nodeType":"88","messageId":"89","endLine":23,"endColumn":31},{"ruleId":"86","severity":1,"message":"111","line":25,"column":10,"nodeType":"88","messageId":"89","endLine":25,"endColumn":21},{"ruleId":"86","severity":1,"message":"112","line":27,"column":10,"nodeType":"88","messageId":"89","endLine":27,"endColumn":23},{"ruleId":"86","severity":1,"message":"113","line":59,"column":11,"nodeType":"88","messageId":"89","endLine":59,"endColumn":18},{"ruleId":"86","severity":1,"message":"114","line":70,"column":12,"nodeType":"88","messageId":"89","endLine":70,"endColumn":16},{"ruleId":"86","severity":1,"message":"115","line":70,"column":18,"nodeType":"88","messageId":"89","endLine":70,"endColumn":25},{"ruleId":"116","severity":1,"message":"117","line":81,"column":8,"nodeType":"118","endLine":81,"endColumn":10,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"120","line":100,"column":8,"nodeType":"118","endLine":100,"endColumn":15,"suggestions":"121"},{"ruleId":"86","severity":1,"message":"122","line":111,"column":19,"nodeType":"88","messageId":"89","endLine":111,"endColumn":24},{"ruleId":"116","severity":1,"message":"117","line":247,"column":8,"nodeType":"118","endLine":247,"endColumn":28,"suggestions":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'View' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useRef' is defined but never used.","'Component' is defined but never used.","'database' is defined but never used.","'messaging' is defined but never used.","'IconButton' is defined but never used.","'Button' is defined but never used.","'token' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","no-dupe-keys","Duplicate key 'fontSize'.","ObjectExpression","unexpected","'Image' is defined but never used.","'MeetingRoomIcon' is defined but never used.","'useSwipeable' is defined but never used.","'LEFT' is defined but never used.","'RIGHT' is defined but never used.","'DOWN' is defined but never used.","'useParams' is defined but never used.","'useSelector' is defined but never used.","'SET_KEYS_TRUE' is defined but never used.","'history' is assigned a value but never used.","'room' is assigned a value but never used.","'setRoom' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.","ArrayExpression",["126"],"React Hook useEffect has missing dependencies: 'name' and 'time'. Either include them or remove the dependency array.",["127"],"'payId' is assigned a value but never used.",["128"],"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [name]",{"range":"135","text":"136"},"Update the dependencies array to be: [count, name, time]",{"range":"137","text":"138"},"Update the dependencies array to be: [name, receiver, transfer]",{"range":"139","text":"140"},[2702,2704],"[name]",[3438,3445],"[count, name, time]",[10968,10988],"[name, receiver, transfer]"]