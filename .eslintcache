[{"/Users/mohit/Downloads/achintya/src/text/groups.js":"1","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/index.js":"2","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/App.js":"3","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/reportWebVitals.js":"4","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Login.js":"5","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/constants.js":"6","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Store/reducers/globalStateReducer.js":"7","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Store/reducers/globalUserDataReducer.js":"8","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/homepage.js":"9","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Store/actions.js":"10","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Hooks/useActionDispatcher.js":"11","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Loading.js":"12"},{"size":20038,"mtime":1612103410377,"results":"13","hashOfConfig":"14"},{"size":455,"mtime":1612006334905,"results":"15","hashOfConfig":"16"},{"size":1917,"mtime":1612252159984,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1611219670379,"results":"18","hashOfConfig":"16"},{"size":4941,"mtime":1612251885372,"results":"19","hashOfConfig":"16"},{"size":348,"mtime":1610281502736,"results":"20","hashOfConfig":"16"},{"size":736,"mtime":1608351920000,"results":"21","hashOfConfig":"16"},{"size":765,"mtime":1611977373059,"results":"22","hashOfConfig":"16"},{"size":20478,"mtime":1612252184840,"results":"23","hashOfConfig":"16"},{"size":98,"mtime":1604389232000,"results":"24","hashOfConfig":"16"},{"size":636,"mtime":1604389232000,"results":"25","hashOfConfig":"16"},{"size":671,"mtime":1610972079000,"results":"26","hashOfConfig":"16"},{"filePath":"27","messages":"28","errorCount":1,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"1ipjpcc",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1crov3q",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/mohit/Downloads/achintya/src/text/groups.js",["53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77"],"import { db, storageRef, database, messaging } from \"../App\";\nimport firebase from \"firebase\";\n\nimport React, { useEffect, useState, useRef, Component } from \"react\";\nimport { Dimensions, Text, TextInput, View, ScrollView } from \"react-native\";\nimport { useSwipeable, Swipeable, LEFT, RIGHT, UP, DOWN } from \"react-swipeable\";\n\nimport {\n  Snackbar,\n} from \"@material-ui/core\";\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport { Button } from \"@material-ui/core\";\n\nimport RecordPage from './RecordRTC';\nimport VideoRoom from '../webRTC/videoRoom'\n\nimport { useSelector } from \"react-redux\";\nimport swal from \"sweetalert\";\n\nimport CryptoJS from 'crypto-js'\n\nimport { Crypt, RSA } from 'hybrid-crypto-js';\n\nimport useActionDispatcher from \"../Hooks/useActionDispatcher\";\nimport { useHistory } from \"react-router-dom\";\nimport Donation from \"../donation\";\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst initialState = {\n  value: \"\",\n  amount: null\n};\n\nlet obj = { data: {} }\n\n\nexport default function TextBroadCast(props) {\n  const history = useHistory();\n\n  const [state, setState] = useState(initialState);\n  const [count, setCount] = useState(0);\n  const [guest, setGuest] = useState(false);\n  const [status, setStatus] = useState(\"\");\n  const [showRecording, setShowRecording] = useState(false)\n  const [showVideo, setShowVideo] = useState(false)\n  const [videoURL, setVideoURL] = useState(\"\")\n  const [isprivate, setPrivate] = useState(false)\n\n  const [balance, setBalance] = useState(null)\n  const [video, setVideo] = useState(false)\n  const [firestore, setFirestore] = useState(null)\n\n  const [turn, setTurn] = useState(\"\")\n  const [requester, setRequester] = useState(\"\")\n  const [accceptance, setAcceptance] = useState(false)\n  const [main, setMain] = useState(true)\n\n  const [replayText, setReplayText] = useState(null)\n  const [message, setMessage] = useState(\"\")\n  const [messgOwner, setOwner] = useState(\"\")\n  const [singleLetter, setSingle] = useState(\"\")\n\n  const textInputRef = useRef();\n  const recordedMessage = useRef();\n\n  const dispatchAction = useActionDispatcher();\n  const user_data = useSelector((state) => state.globalUserData);\n  const [word, setWord] = useState(\"\")\n\n  const handleChange = (e) => {\n    setState((s) => ({\n      ...s,\n      amount: e,\n    }));\n  }\n\n  useEffect(() => {\n    messaging.onMessage((payload) => {\n      const obj = JSON.parse(payload.data.status)\n      const update = obj.data\n      setReplayText(update)\n      setOwner(obj.name)\n      console.log(\"on message works!\", payload, payload.data, update);\n    });\n  }, [])\n\n  useEffect(() => {\n    if (replayText !== null) {\n      replay()\n    }\n\n  }, [replayText])\n\n  const replay = () => {\n    const keyArr = Object.keys(replayText)\n    const valArr = Object.values(replayText)\n    let fullTimeline = \"\";\n    let count = 0\n\n    let counter = parseInt(keyArr[count]) - parseInt(keyArr[count])\n    var myFunction = async function () {\n      console.log(counter, valArr[count]);\n      fullTimeline = fullTimeline += valArr[count]\n      setMessage(fullTimeline)\n\n      count = await count + 1\n      counter = parseInt(keyArr[count]) - parseInt(keyArr[count - 1])\n      const timer = setTimeout(myFunction, counter);\n\n      if (keyArr[count] === undefined || keyArr[count] === null) {\n        clearTimeout(timer)\n        setTimeout(() => {\n          setMessage(\"\")\n        }, 5000);\n        //alert('Replay stream finished')\n      }\n\n    }\n    setTimeout(myFunction, counter)\n  }\n\n  const writerFunction = (status) => {\n\n    /*----------------- Read host status from rtdb-------------------*/\n    status.on(\"value\", function (snapshot) {\n      //console.log(snapshot.val());\n      if (snapshot.val().status === \"waiting\") {\n        setState((s) => ({\n          ...s,\n          value: \"\",\n        }));\n      }\n      if (snapshot.val().turn === props.spaceId && !user_data.is_creator) {\n        setAcceptance(true)\n      }\n      setStatus(snapshot.val().status);\n      setTurn(snapshot.val().turn)\n      setRequester(snapshot.val().call_request)\n\n      //console.log(snapshot.val().status, snapshot.val().turn);\n    });\n\n  };\n\n  //fetching current data from rtdb -- text/video\n  const keyPressFunction = async (ref) => {\n    let url;\n    let totalCost = 0\n    ref.on(\"value\", function (snapshot) {\n      if (snapshot.val()) {\n        if (snapshot.val().currentLetter === null) {\n          return null;\n        } else {\n          const current = snapshot.val().currentLetter;\n\n          // db.ref(`/Spaces/${props.spaceId}/count`).on(\"value\", function (snapshot) {\n          //   totalCost = totalCost + parseInt(current.length * parseInt(snapshot.val()))\n\n          //   console.log('cost: ', totalCost, current.length, 'people ', snapshot.val());\n          //   setCost(totalCost)\n          // })\n\n          if (current === \"Backspace\") {\n            setState((e) => ({\n              ...e,\n              value: e.value.slice(0, -1),\n            }));\n          } else if (current === \"Enter\") {\n            setState((e) => ({\n              ...e,\n              value: e.value + \"\\n\",\n            }));\n          } else if (current.substring(0, 8) === \"https://\") {\n            url = current   //if video url is there.\n            setShowVideo(true);\n            setVideoURL(url)\n          } else {\n            setState((e) => ({\n              ...e,\n              value: e.value + current,\n            }));\n          }\n        }\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (singleLetter !== \"\") {\n      //let date = Date.now()\n\n      obj[\"name\"] = turn\n      obj[\"data\"][Date.now()] = singleLetter\n      setFirestore(obj)\n      if (!user_data.is_creator) {\n        setState((e) => ({\n          ...e,\n          value: e.value + singleLetter,\n        }));\n        //singleLetter(\"\")\n      }\n\n      console.log(firestore, state.value);\n    }\n\n  }, [singleLetter])\n\n  const listening = () => {\n    let docRef;\n    if (user_data.is_creator) {\n      docRef = db.ref(`/Spaces/${props.spaceId}/data`);\n    } else {\n      docRef = db.ref(`/Spaces/${user_data.joinedSpace}/data`);\n    }\n    keyPressFunction(docRef);\n  };\n\n  const fetchingWriter = async () => {\n    let writerStatus;\n    if (user_data.is_creator) {\n      writerStatus = db.ref(`/Spaces/${props.spaceId}/`)\n    } else {\n      writerStatus = db.ref(`/Spaces/${user_data.joinedSpace}/`)\n    }\n    writerFunction(writerStatus)\n  }\n\n  const subscription = () => {\n    let id = Math.random().toString(36).slice(2)\n\n    database.collection(\"actions\").doc(id).set({\n      subscription: user_data.joinedSpace,\n      fcmtoken: user_data.token,\n      time: firebase.firestore.FieldValue.serverTimestamp()\n    }).then(() => {\n      localStorage.setItem(\"docId\", id);\n    })\n  }\n\n  const spaceOwnerData = async () => {\n    if (props.spaceId) {    //checking for name presence.\n      const firstName = `${props.spaceId.charAt(0).toUpperCase() + props.spaceId.slice(1)}:  `\n\n      if (user_data.is_creator) { // for owner.\n\n        db.ref(`/Spaces/${props.spaceId}/`).onDisconnect().update({\n          online: false,\n          //balance: firebase.database.ServerValue.increment(-cost)\n        });\n\n        await db.ref(`/Spaces/${props.spaceId}/`).update({\n          call_request: \"\",\n          count: firebase.database.ServerValue.increment(1),\n          turn: props.spaceId,\n          status: 'host',\n          online: true\n        })\n\n        db.ref(`/Spaces/${props.spaceId}/data`).update({\n          currentLetter: \"\",\n        })\n\n        listening();\n\n      } else {\n\n        await db.ref(`/Spaces/${props.spaceId}/`).update({\n          balance: firebase.database.ServerValue.increment(-1),\n        });\n        await db.ref(`/Spaces/${user_data.joinedSpace}/`).update({\n          count: firebase.database.ServerValue.increment(1),\n        })\n\n        db.ref(`/Spaces/${user_data.joinedSpace}/`).onDisconnect().update({\n          count: firebase.database.ServerValue.increment(-1),\n        });\n\n        let snap = localStorage.getItem(\"docId\")\n        if (snap === null) {\n          subscription()\n        } else {\n\n          database.collection(\"actions\").doc(snap).update({\n            subscription: \"none\",\n            fcmtoken: user_data.token,\n          }).then(() => {\n            subscription()\n          })\n        }\n\n\n      }\n\n      await fetchingWriter();\n\n    }\n  };\n\n  const fetchUpdate = () => {\n    spaceOwnerData();\n    console.log(requester);\n  };\n\n  useEffect(() => {\n    console.log(user_data.is_creator, user_data.joinedSpace);\n    fetchUpdate();\n  }, []);\n\n  //sending letter by letter to rtdb.\n  const handleInput = async (event) => {\n    const date = Date.now();\n\n    const current = event.nativeEvent.key;\n\n    let docRef;\n    if (isprivate === false) {\n\n      if (user_data.is_creator) {\n        docRef = db.ref(`/Spaces/${props.spaceId}/data`);\n      } else {\n        docRef = db.ref(`/Spaces/${user_data.joinedSpace}/data`);\n      }\n\n      if (current === \"Enter\") {\n        textInputRef.current.focus();\n      }\n\n      //while deleting the letters, speaker name shouldn't be deleted\n      if (current === \"ArrowRight\" || current === \"ArrowLeft\" || current === \"ArrowUp\" || current === \"ArrowDown\" || current === \"Escape\") {\n        return null;\n      } else if (current === \"Tab\") {\n        setWord(\"     \")\n        //setSingle(current)\n\n      } else if (current === \" \") {\n\n        let wrd = word + \" \"\n        setSingle(wrd)\n       \n\n        console.log(originalText);\n        docRef.update({ currentLetter: wrd, time: date }).then(() => {\n          textInputRef.current.focus();\n        })\n        setWord(\"\")\n      } else {\n        setWord(word + current)\n      }\n    }\n  };\n\n  const sendRequest = () => {\n    let id = Math.random().toString(36).slice(2)\n    db.ref(`/Spaces/${user_data.joinedSpace}/`).update({ call_request: props.spaceId, status: \"waiting\" }).then(() => {\n      alert(\"request send! wait for acceptance...\")\n    })\n  }\n\n  const getTurn = async () => {\n\n    if (user_data.is_creator) {\n      db.ref(`/Spaces/${props.spaceId}/`).update({ status: \"host\", turn: props.spaceId });\n      db.ref(`/Spaces/${props.spaceId}/webRTC/message/`).update({\n        callRequest: 'none'\n      })\n      setState((s) => ({\n        ...s,\n        value: \"\",\n      }));\n    } else {\n      sendRequest()\n    }\n\n    textInputRef.current.focus();\n\n  };\n\n  const leaveTurn = () => {\n\n    if (user_data.is_creator) {\n      db.ref(`/Spaces/${props.spaceId}/`).update({ status: \"\" });\n      database.collection(\"Creations\").add({\n        message: JSON.stringify(firestore)\n      }).then(() => {\n        setFirestore(null)\n        //obj = {}\n      })\n    } else {\n      setAcceptance(false)\n      db.ref(`/Spaces/${user_data.joinedSpace}/`).update({ status: \"host\", turn: user_data.joinedSpace });\n      db.ref(`/Spaces/${user_data.joinedSpace}/webRTC/message/`).update({\n        callRequest: 'none'\n      })\n      setState((s) => ({\n        ...s,\n        value: \"\",\n      }));\n      database.collection(\"Creations\").add({\n        message: JSON.stringify(firestore)\n      }).then(() => {\n        setFirestore(null)\n        //obj = {}\n      })\n    }\n\n    textInputRef.current.focus();\n  };\n\n  const acceptRequest = () => {\n    db.ref(`/Spaces/${props.spaceId}/`).update({ status: \"guest\", turn: requester, call_request: \"\" });\n  }\n\n  const rejectRequest = () => {\n    db.ref(`/Spaces/${props.spaceId}/`).update({ call_request: \"\" });\n  }\n\n  // // Register event lister for \"ENTER\" key press to take turn for write\n  // useEffect(() => {\n  //   console.log('called');\n  //   let wrd = word + \" \"\n  //   const listener = (event) => {\n  //     //Escape\n  //     if (event.keyCode === 32) {\n  //       db.ref(`/Spaces/${props.spaceId}/data`).update({\n  //         currentLetter: wrd\n  //       }).then(() => {\n  //         setSingle(wrd)\n  //         setWord(\"\")\n  //       })\n  //     }\n  //   };\n\n  //   // register listener\n  //   document.addEventListener(\"keydown\", listener);\n\n  //   // clean up function, un register listener on component unmount\n  //   return () => {\n  //     document.removeEventListener(\"keydown\", listener);\n  //   };\n  // }, []);\n\n  const sendMessage = () => {\n\n    firebase.firestore().collection(\"Spaces\").doc(props.spaceId).collection(\"creations\").doc('something').collection(\"Text\").add({\n      message: JSON.stringify({ name: props.spaceId, data: { [Date.now()]: state.value } })\n    }).then(() => {\n      setState({\n        value: \"\"\n      })\n    })\n  }\n\n  const onSwiping = async ({ dir }) => {\n    if (dir === UP) {\n      console.log('up');\n      setVideo(true)\n    }\n    if (dir === RIGHT) {\n      console.log('right');\n      if (video === true) {\n        setMain(true)\n      } else {\n        setShowRecording(false)\n      }\n\n      // if (!user_data.is_creator) {\n      //   setDonate(true)\n      // }\n\n    }\n    if (dir === LEFT) {\n      if (guest) {\n        setShowRecording(true)\n      } else if (video === true) {\n        setMain(false)\n      } else {\n        alert('sorry, you can \\'t send video message')\n      }\n    } if (dir === DOWN) {\n      setVideo(false)\n      //setDonate(true)\n    }\n  }\n\n  const autoFocus = () => {\n    textInputRef.current.focus();\n  }\n\n  useEffect(() => {\n    console.log(isprivate);\n    setState({\n      value: \"\"\n    })\n    // db.ref(`/Spaces/${props.spaceId}/`).update({\n    //   available: isprivate === true ? \"public\" : \"private\"\n    // })\n  }, [isprivate])\n\n\n  return (\n    <Swipeable onSwiped={(eventData) => onSwiping(eventData)} preventDefaultTouchmoveEvent={true} trackMouse={true} >\n      <View>\n        {showRecording === true && user_data.revert === false ?\n          <RecordPage spaceId={props.spaceId} /> :\n          video === true ?\n            <View>\n              {(!user_data.is_creator && status === \"guest\" && accceptance === true) ?\n                <VideoRoom username={user_data.joinedSpace} selfName={props.spaceId} creator={false} main={main} />\n                : user_data.is_creator ?\n                  <VideoRoom username={props.spaceId} creator={true} main={main} /> : null}\n            </View>\n            :\n            <View\n              style={{\n                shadowOpacity: 4,\n                width: width,\n                overflowY: \"auto\",\n                height: height * 0.85,\n                marginTop: showVideo === false ? '18px' : null,\n                zIndex: 99999,\n                overscrollBehaviorY: \"contain\",\n                scrollSnapType: \"y proximity\",\n              }}\n              onClick={autoFocus}\n            >\n              {balance <= 0 ? null :\n                (<Text style={{ marginLeft: width - ((10 / 100) * width), position: 'absolute' }}>Balance: {balance}</Text>)}\n              <View>\n                <View style={{ textAlign: 'center', fontWeight: 600, paddingBottom: 5, fontFamily: 'cursive' }}>{turn}</View>\n                {!user_data.is_creator ?\n                  <Donation receiver={user_data.joinedSpace} />\n                  : <button style={{ border: 'none', fontSize: 16, fontFamily: 'auto', position: 'absolute', width: '10%', background: 'none' }} onClick={() => setPrivate(!isprivate)}>{isprivate === true ? \"Public\" : \"Private\"}</button>}\n                <View style={{ height: 1, background: 'black', marginBottom: 12 }}></View>\n                <Text\n                  style={{\n                    marginLeft: showVideo === false ? '10px' : null,\n                    fontSize: 15.5,\n                    paddingRight: showVideo === false ? '18px' : null,\n                    overscrollBehaviorY: \"contain\",\n                    scrollSnapType: \"y proximity\",\n                    scrollSnapAlign: \"end\",\n                  }}\n                >\n                  {showVideo === true ?\n                    <View style={{ height: '100%', width: showVideo === true ? '100%' : null }}>\n                      <img src=\"./right-arrow.png\" style={{ height: 40, width: 40, marginTop: 30, marginLeft: width / 0.5, position: 'absolute', cursor: 'pointer', zIndex: 100 }} alt=\"skip\" onClick={() => setShowVideo(false)} />\n                      <video style={{ width: width, height: height, overflow: 'hidden' }} src={videoURL} ref={recordedMessage} onEnded={() => setShowVideo(false)} autoPlay playsInline></video>\n                    </View>\n                    :\n                    <View>\n                      {!user_data.is_creator ?\n                        <>\n                          {state.value === \"\" ?\n                            (<Text>{message}</Text>)\n                            :\n                            (<Text>{state.value}</Text>)\n                          }\n                        </>\n                        :\n                        <View style={{ display: 'flex', flexFlow: 'row' }}><span style={{ letterSpacing: 1 }}>{state.value}</span><span style={{ letterSpacing: 1 }}>{word}</span></View>\n                      }\n                    </View>\n\n                  }\n\n                  <TextInput\n                    name=\"usertext\"\n                    multiline={true}\n                    numberOfLines={1}\n                    style={{\n                      outline: \"none\",\n                      border: \"none\",\n                      color: \"#888888\",\n                    }}\n                    id=\"standard-multiline-flexible\"\n                    style={{ outline: \"none\", width: 2, position: 'absolute' }}\n                    value=\"\"\n                    onKeyPress={handleInput}\n                    autoFocus={true}\n                    editable={user_data.is_creator ? status === \"host\" : (status === \"guest\" && accceptance === true || turn === props.spaceId)}\n                    ref={textInputRef}\n                  />\n                </Text>\n              </View>\n              <ScrollView\n                style={{\n                  position: \"fixed\",\n                  top: user_data.is_creator ? height / 1.1 : (height / 1.1),\n                  //right: width <= 400 ? 0 : width / 4.4,\n                  width: \"100%\",\n                  zIndex: 99999,\n                }}\n              >\n                {!user_data.is_creator && status === \"\" && requester === \"\" ? (\n                  <button onClick={getTurn}>Take turn</button>\n                ) : (user_data.is_creator && status !== \"host\") || status === \"\" ? (\n                  <button onClick={getTurn}>Take turn</button>\n                ) : null}\n\n                {(!user_data.is_creator && status === \"guest\" && accceptance === true) ||\n                  (user_data.is_creator && status == \"host\" && isprivate === false) ? (\n                    <button onClick={leaveTurn}>Leave turn</button>\n                  ) :\n                  // <CButton\n                  //   onClick={sendMessage}\n                  //   title=\"Send\"\n                  // />\n                  null\n                }\n              </ScrollView>\n\n              <View>\n                {requester !== \"\" && user_data.is_creator ?\n                  <Snackbar\n                    open={requester !== \"\" && user_data.is_creator}\n                    style={{ position: 'fixed', top: '580px', width: '100%' }}\n                  >\n                    <Alert\n                      severity=\"info\"\n                      style={{ backgroundColor: \"#fff\", color: \"#000\" }}\n                    >\n                      {requester} sent you a stream request.{\" \"}\n                      <Button\n                        style={{ color: \"#1eb2a6\", fontWeight: \"bold\" }}\n                        size=\"small\"\n                        onClick={acceptRequest}\n                      >\n                        Accept\n            </Button>\n                      <Button\n                        style={{ color: \"#fe346e\", fontWeight: \"bold\" }}\n                        size=\"small\"\n                        onClick={rejectRequest}\n                      >\n                        Decline\n            </Button>\n                    </Alert>\n                  </Snackbar>\n                  : null}\n              </View>\n            </View>\n\n        }\n      </View>\n    </Swipeable>\n  )\n}\n","/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/index.js",[],["78","79"],"/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/App.js",["80"],"/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/reportWebVitals.js",[],"/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Login.js",["81","82","83","84","85","86","87","88","89","90","91"],"/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/constants.js",[],"/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Store/reducers/globalStateReducer.js",[],"/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Store/reducers/globalUserDataReducer.js",[],"/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/homepage.js",["92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109"],"/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Store/actions.js",[],"/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Hooks/useActionDispatcher.js",[],"/Users/mohit/Downloads/Tech Pieces/payment & transactions/achintya/src/Loading.js",[],{"ruleId":"110","severity":1,"message":"111","line":1,"column":14,"nodeType":"112","messageId":"113","endLine":1,"endColumn":24},{"ruleId":"110","severity":1,"message":"114","line":4,"column":46,"nodeType":"112","messageId":"113","endLine":4,"endColumn":55},{"ruleId":"110","severity":1,"message":"115","line":6,"column":10,"nodeType":"112","messageId":"113","endLine":6,"endColumn":22},{"ruleId":"110","severity":1,"message":"116","line":20,"column":8,"nodeType":"112","messageId":"113","endLine":20,"endColumn":12},{"ruleId":"110","severity":1,"message":"117","line":22,"column":8,"nodeType":"112","messageId":"113","endLine":22,"endColumn":16},{"ruleId":"110","severity":1,"message":"118","line":40,"column":9,"nodeType":"112","messageId":"113","endLine":40,"endColumn":16},{"ruleId":"110","severity":1,"message":"119","line":43,"column":10,"nodeType":"112","messageId":"113","endLine":43,"endColumn":15},{"ruleId":"110","severity":1,"message":"120","line":43,"column":17,"nodeType":"112","messageId":"113","endLine":43,"endColumn":25},{"ruleId":"110","severity":1,"message":"121","line":44,"column":17,"nodeType":"112","messageId":"113","endLine":44,"endColumn":25},{"ruleId":"110","severity":1,"message":"122","line":51,"column":19,"nodeType":"112","messageId":"113","endLine":51,"endColumn":29},{"ruleId":"110","severity":1,"message":"123","line":62,"column":10,"nodeType":"112","messageId":"113","endLine":62,"endColumn":20},{"ruleId":"110","severity":1,"message":"124","line":68,"column":9,"nodeType":"112","messageId":"113","endLine":68,"endColumn":23},{"ruleId":"110","severity":1,"message":"125","line":72,"column":9,"nodeType":"112","messageId":"113","endLine":72,"endColumn":21},{"ruleId":"126","severity":1,"message":"127","line":94,"column":6,"nodeType":"128","endLine":94,"endColumn":18,"suggestions":"129"},{"ruleId":"110","severity":1,"message":"130","line":150,"column":9,"nodeType":"112","messageId":"113","endLine":150,"endColumn":18},{"ruleId":"126","severity":1,"message":"131","line":208,"column":6,"nodeType":"128","endLine":208,"endColumn":20,"suggestions":"132"},{"ruleId":"110","severity":1,"message":"133","line":244,"column":13,"nodeType":"112","messageId":"113","endLine":244,"endColumn":22},{"ruleId":"126","severity":1,"message":"134","line":309,"column":6,"nodeType":"128","endLine":309,"endColumn":8,"suggestions":"135"},{"ruleId":"136","severity":2,"message":"137","line":343,"column":21,"nodeType":"112","messageId":"138","endLine":343,"endColumn":33},{"ruleId":"110","severity":1,"message":"139","line":355,"column":9,"nodeType":"112","messageId":"113","endLine":355,"endColumn":11},{"ruleId":"110","severity":1,"message":"140","line":444,"column":9,"nodeType":"112","messageId":"113","endLine":444,"endColumn":20},{"ruleId":"141","severity":1,"message":"142","line":578,"column":21,"nodeType":"143","endLine":578,"endColumn":80},{"ruleId":"144","severity":1,"message":"145","line":582,"column":94,"nodeType":"146","messageId":"147","endLine":582,"endColumn":96},{"ruleId":"144","severity":1,"message":"145","line":582,"column":118,"nodeType":"146","messageId":"147","endLine":582,"endColumn":120},{"ruleId":"148","severity":1,"message":"149","line":603,"column":51,"nodeType":"150","messageId":"151","endLine":603,"endColumn":53},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"110","severity":1,"message":"156","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":14},{"ruleId":"110","severity":1,"message":"157","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":26},{"ruleId":"110","severity":1,"message":"158","line":1,"column":38,"nodeType":"112","messageId":"113","endLine":1,"endColumn":44},{"ruleId":"110","severity":1,"message":"114","line":1,"column":46,"nodeType":"112","messageId":"113","endLine":1,"endColumn":55},{"ruleId":"110","severity":1,"message":"159","line":5,"column":14,"nodeType":"112","messageId":"113","endLine":5,"endColumn":22},{"ruleId":"110","severity":1,"message":"160","line":5,"column":24,"nodeType":"112","messageId":"113","endLine":5,"endColumn":33},{"ruleId":"110","severity":1,"message":"161","line":7,"column":21,"nodeType":"112","messageId":"113","endLine":7,"endColumn":31},{"ruleId":"110","severity":1,"message":"162","line":7,"column":33,"nodeType":"112","messageId":"113","endLine":7,"endColumn":39},{"ruleId":"110","severity":1,"message":"163","line":33,"column":35,"nodeType":"112","messageId":"113","endLine":33,"endColumn":40},{"ruleId":"110","severity":1,"message":"164","line":49,"column":35,"nodeType":"112","messageId":"113","endLine":49,"endColumn":40},{"ruleId":"110","severity":1,"message":"165","line":50,"column":35,"nodeType":"112","messageId":"113","endLine":50,"endColumn":45},{"ruleId":"166","severity":1,"message":"167","line":110,"column":29,"nodeType":"168","messageId":"151","endLine":110,"endColumn":37},{"ruleId":"110","severity":1,"message":"158","line":1,"column":38,"nodeType":"112","messageId":"113","endLine":1,"endColumn":44},{"ruleId":"110","severity":1,"message":"114","line":1,"column":46,"nodeType":"112","messageId":"113","endLine":1,"endColumn":55},{"ruleId":"110","severity":1,"message":"169","line":2,"column":16,"nodeType":"112","messageId":"113","endLine":2,"endColumn":21},{"ruleId":"110","severity":1,"message":"115","line":9,"column":10,"nodeType":"112","messageId":"113","endLine":9,"endColumn":22},{"ruleId":"110","severity":1,"message":"170","line":9,"column":35,"nodeType":"112","messageId":"113","endLine":9,"endColumn":39},{"ruleId":"110","severity":1,"message":"171","line":9,"column":41,"nodeType":"112","messageId":"113","endLine":9,"endColumn":46},{"ruleId":"110","severity":1,"message":"172","line":9,"column":52,"nodeType":"112","messageId":"113","endLine":9,"endColumn":56},{"ruleId":"110","severity":1,"message":"173","line":22,"column":22,"nodeType":"112","messageId":"113","endLine":22,"endColumn":31},{"ruleId":"110","severity":1,"message":"174","line":24,"column":10,"nodeType":"112","messageId":"113","endLine":24,"endColumn":21},{"ruleId":"110","severity":1,"message":"175","line":26,"column":10,"nodeType":"112","messageId":"113","endLine":26,"endColumn":23},{"ruleId":"110","severity":1,"message":"160","line":30,"column":24,"nodeType":"112","messageId":"113","endLine":30,"endColumn":33},{"ruleId":"110","severity":1,"message":"118","line":57,"column":11,"nodeType":"112","messageId":"113","endLine":57,"endColumn":18},{"ruleId":"110","severity":1,"message":"176","line":68,"column":12,"nodeType":"112","messageId":"113","endLine":68,"endColumn":16},{"ruleId":"110","severity":1,"message":"177","line":68,"column":18,"nodeType":"112","messageId":"113","endLine":68,"endColumn":25},{"ruleId":"126","severity":1,"message":"178","line":79,"column":8,"nodeType":"128","endLine":79,"endColumn":10,"suggestions":"179"},{"ruleId":"126","severity":1,"message":"180","line":98,"column":8,"nodeType":"128","endLine":98,"endColumn":15,"suggestions":"181"},{"ruleId":"110","severity":1,"message":"182","line":109,"column":19,"nodeType":"112","messageId":"113","endLine":109,"endColumn":24},{"ruleId":"126","severity":1,"message":"178","line":250,"column":8,"nodeType":"128","endLine":250,"endColumn":28,"suggestions":"183"},"no-unused-vars","'storageRef' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'useSwipeable' is defined but never used.","'swal' is defined but never used.","'CryptoJS' is defined but never used.","'history' is assigned a value but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'setGuest' is assigned a value but never used.","'setBalance' is assigned a value but never used.","'messgOwner' is assigned a value but never used.","'dispatchAction' is assigned a value but never used.","'handleChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'replay'. Either include it or remove the dependency array.","ArrayExpression",["184"],"'totalCost' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'firestore', 'state.value', 'turn', and 'user_data.is_creator'. Either include them or remove the dependency array.",["185"],"'firstName' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchUpdate', 'user_data.is_creator', and 'user_data.joinedSpace'. Either include them or remove the dependency array.",["186"],"no-undef","'originalText' is not defined.","undef","'id' is assigned a value but never used.","'sendMessage' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["187"],"no-negated-in-lhs",["188"],"'View' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'database' is defined but never used.","'messaging' is defined but never used.","'IconButton' is defined but never used.","'Button' is defined but never used.","'token' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","no-dupe-keys","Duplicate key 'fontSize'.","ObjectExpression","'Image' is defined but never used.","'LEFT' is defined but never used.","'RIGHT' is defined but never used.","'DOWN' is defined but never used.","'useParams' is defined but never used.","'useSelector' is defined but never used.","'SET_KEYS_TRUE' is defined but never used.","'room' is assigned a value but never used.","'setRoom' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["189"],"React Hook useEffect has missing dependencies: 'name' and 'time'. Either include them or remove the dependency array.",["190"],"'payId' is assigned a value but never used.",["191"],{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},"Update the dependencies array to be: [replay, replayText]",{"range":"204","text":"205"},"Update the dependencies array to be: [firestore, singleLetter, state.value, turn, user_data.is_creator]",{"range":"206","text":"207"},"Update the dependencies array to be: [fetchUpdate, user_data.is_creator, user_data.joinedSpace]",{"range":"208","text":"209"},"Update the dependencies array to be: [name]",{"range":"210","text":"211"},"Update the dependencies array to be: [count, name, time]",{"range":"212","text":"213"},"Update the dependencies array to be: [name, receiver, transfer]",{"range":"214","text":"215"},[2617,2629],"[replay, replayText]",[5807,5821],"[firestore, singleLetter, state.value, turn, user_data.is_creator]",[8480,8482],"[fetchUpdate, user_data.is_creator, user_data.joinedSpace]",[2598,2600],"[name]",[3334,3341],"[count, name, time]",[10916,10936],"[name, receiver, transfer]"]